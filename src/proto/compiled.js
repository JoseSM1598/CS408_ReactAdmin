/* eslint-disable */
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!


goog.provide('proto.api_proto.AddFullSpaceRequest');
goog.provide('proto.api_proto.AddFullSpaceResponse');
goog.provide('proto.api_proto.AddPartialSpaceRequest');
goog.provide('proto.api_proto.AddPartialSpaceResponse');
goog.provide('proto.api_proto.Answer');
goog.provide('proto.api_proto.AnswerCustomQuestionRequest');
goog.provide('proto.api_proto.AnswerCustomQuestionResponse');
goog.provide('proto.api_proto.AnswerDefaultQuestionRequest');
goog.provide('proto.api_proto.AnswerDefaultQuestionResponse');
goog.provide('proto.api_proto.AnswerValue');
goog.provide('proto.api_proto.AnyNearbyViewQuestion');
goog.provide('proto.api_proto.AnyQuestion');
goog.provide('proto.api_proto.AppVersion');
goog.provide('proto.api_proto.AskCustomQuestionRequest');
goog.provide('proto.api_proto.AskCustomQuestionResponse');
goog.provide('proto.api_proto.AskDefaultQuestionResponse');
goog.provide('proto.api_proto.AskSpaceViewBuyAnswersRequest');
goog.provide('proto.api_proto.AskSpaceViewBuyAnswersResponse');
goog.provide('proto.api_proto.AskSpaceViewGetCustomQuestionsRequest');
goog.provide('proto.api_proto.AskSpaceViewGetCustomQuestionsResponse');
goog.provide('proto.api_proto.AskSpaceViewGetDefaultQuestionRequest');
goog.provide('proto.api_proto.AskSpaceViewGetDefaultQuestionResponse');
goog.provide('proto.api_proto.AuthViewCreateIfNoUserRequest');
goog.provide('proto.api_proto.AuthViewCreateIfNoUserResponse');
goog.provide('proto.api_proto.Coordinates');
goog.provide('proto.api_proto.CustomQuestion');
goog.provide('proto.api_proto.CustomQuestionStatus');
goog.provide('proto.api_proto.DefaultAnswerOption');
goog.provide('proto.api_proto.DefaultQuestion');
goog.provide('proto.api_proto.DeleteQuestionRequest');
goog.provide('proto.api_proto.DeleteQuestionResponse');
goog.provide('proto.api_proto.FullCustomQuestion');
goog.provide('proto.api_proto.FullDefaultQuestion');
goog.provide('proto.api_proto.GetAllAnswersRequest');
goog.provide('proto.api_proto.GetAllAnswersResponse');
goog.provide('proto.api_proto.GetAllQuestionsRequest');
goog.provide('proto.api_proto.GetAllQuestionsResponse');
goog.provide('proto.api_proto.GetAllSpacesResponse');
goog.provide('proto.api_proto.GetAllTransactionsRequest');
goog.provide('proto.api_proto.GetAllTransactionsResponse');
goog.provide('proto.api_proto.GetBulkSpaceDetailsRequest');
goog.provide('proto.api_proto.GetBulkSpaceDetailsResponse');
goog.provide('proto.api_proto.GetNearbySpaceRequest');
goog.provide('proto.api_proto.GetNearbySpaceResponse');
goog.provide('proto.api_proto.GetSpaceDetailsRequest');
goog.provide('proto.api_proto.GetSpaceDetailsResponse');
goog.provide('proto.api_proto.LandingViewFinishOnboardingRequest');
goog.provide('proto.api_proto.LandingViewFinishOnboardingResponse');
goog.provide('proto.api_proto.NearbyViewCustomQuestion');
goog.provide('proto.api_proto.NearbyViewDefaultQuestion');
goog.provide('proto.api_proto.NearbyViewGetQuestionsRequest');
goog.provide('proto.api_proto.NearbyViewGetQuestionsResponse');
goog.provide('proto.api_proto.NearbyViewGetQuestionsResponseCombined');
goog.provide('proto.api_proto.NotificationAnswer');
goog.provide('proto.api_proto.NotificationGetNotificationsRequest');
goog.provide('proto.api_proto.NotificationGetNotificationsResponse');
goog.provide('proto.api_proto.ProfileViewGetAllUsersResponse');
goog.provide('proto.api_proto.ProfileViewGetUserRequest');
goog.provide('proto.api_proto.ProfileViewGetUserResponse');
goog.provide('proto.api_proto.ProfileViewQuestion');
goog.provide('proto.api_proto.ReportAnswerRequest');
goog.provide('proto.api_proto.SearchResult');
goog.provide('proto.api_proto.SearchSpaceByNameRequest');
goog.provide('proto.api_proto.SearchSpaceByNameResponse');
goog.provide('proto.api_proto.Space');
goog.provide('proto.api_proto.SpaceCategory');
goog.provide('proto.api_proto.SpaceDetail');
goog.provide('proto.api_proto.ThankAnswerRequest');
goog.provide('proto.api_proto.ThankYou');
goog.provide('proto.api_proto.Thanker');
goog.provide('proto.api_proto.TransactionObject');
goog.provide('proto.api_proto.TransactionStatus');
goog.provide('proto.api_proto.TransactionType');
goog.provide('proto.api_proto.TransactionView');
goog.provide('proto.api_proto.UpdateSpaceRequest');
goog.provide('proto.api_proto.UpdateSpaceResponse');
goog.provide('proto.api_proto.User');
goog.provide('proto.api_proto.WaitOnDefaultQuestionRequest');
goog.provide('proto.api_proto.WaitOnDefaultQuestionResponse');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.Coordinates = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_proto.Coordinates, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.Coordinates.displayName = 'proto.api_proto.Coordinates';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.Space = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_proto.Space, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.Space.displayName = 'proto.api_proto.Space';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.SpaceDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api_proto.SpaceDetail.repeatedFields_, null);
};
goog.inherits(proto.api_proto.SpaceDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.SpaceDetail.displayName = 'proto.api_proto.SpaceDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.SearchResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_proto.SearchResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.SearchResult.displayName = 'proto.api_proto.SearchResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.AppVersion = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_proto.AppVersion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.AppVersion.displayName = 'proto.api_proto.AppVersion';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.User = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_proto.User, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.User.displayName = 'proto.api_proto.User';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.Thanker = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_proto.Thanker, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.Thanker.displayName = 'proto.api_proto.Thanker';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.Answer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_proto.Answer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.Answer.displayName = 'proto.api_proto.Answer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.CustomQuestion = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_proto.CustomQuestion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.CustomQuestion.displayName = 'proto.api_proto.CustomQuestion';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.FullCustomQuestion = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api_proto.FullCustomQuestion.repeatedFields_, null);
};
goog.inherits(proto.api_proto.FullCustomQuestion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.FullCustomQuestion.displayName = 'proto.api_proto.FullCustomQuestion';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.AnswerValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.api_proto.AnswerValue.oneofGroups_);
};
goog.inherits(proto.api_proto.AnswerValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.AnswerValue.displayName = 'proto.api_proto.AnswerValue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.DefaultAnswerOption = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_proto.DefaultAnswerOption, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.DefaultAnswerOption.displayName = 'proto.api_proto.DefaultAnswerOption';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.DefaultQuestion = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api_proto.DefaultQuestion.repeatedFields_, null);
};
goog.inherits(proto.api_proto.DefaultQuestion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.DefaultQuestion.displayName = 'proto.api_proto.DefaultQuestion';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.FullDefaultQuestion = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api_proto.FullDefaultQuestion.repeatedFields_, null);
};
goog.inherits(proto.api_proto.FullDefaultQuestion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.FullDefaultQuestion.displayName = 'proto.api_proto.FullDefaultQuestion';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.AnyQuestion = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.api_proto.AnyQuestion.oneofGroups_);
};
goog.inherits(proto.api_proto.AnyQuestion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.AnyQuestion.displayName = 'proto.api_proto.AnyQuestion';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.TransactionView = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_proto.TransactionView, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.TransactionView.displayName = 'proto.api_proto.TransactionView';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.ThankYou = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_proto.ThankYou, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.ThankYou.displayName = 'proto.api_proto.ThankYou';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.WaitOnDefaultQuestionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_proto.WaitOnDefaultQuestionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.WaitOnDefaultQuestionRequest.displayName = 'proto.api_proto.WaitOnDefaultQuestionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.WaitOnDefaultQuestionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_proto.WaitOnDefaultQuestionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.WaitOnDefaultQuestionResponse.displayName = 'proto.api_proto.WaitOnDefaultQuestionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.AskDefaultQuestionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_proto.AskDefaultQuestionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.AskDefaultQuestionResponse.displayName = 'proto.api_proto.AskDefaultQuestionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.AnswerDefaultQuestionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_proto.AnswerDefaultQuestionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.AnswerDefaultQuestionRequest.displayName = 'proto.api_proto.AnswerDefaultQuestionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.AnswerDefaultQuestionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_proto.AnswerDefaultQuestionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.AnswerDefaultQuestionResponse.displayName = 'proto.api_proto.AnswerDefaultQuestionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.AskCustomQuestionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_proto.AskCustomQuestionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.AskCustomQuestionRequest.displayName = 'proto.api_proto.AskCustomQuestionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.AskCustomQuestionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_proto.AskCustomQuestionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.AskCustomQuestionResponse.displayName = 'proto.api_proto.AskCustomQuestionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.AnswerCustomQuestionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_proto.AnswerCustomQuestionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.AnswerCustomQuestionRequest.displayName = 'proto.api_proto.AnswerCustomQuestionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.AnswerCustomQuestionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_proto.AnswerCustomQuestionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.AnswerCustomQuestionResponse.displayName = 'proto.api_proto.AnswerCustomQuestionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.ThankAnswerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_proto.ThankAnswerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.ThankAnswerRequest.displayName = 'proto.api_proto.ThankAnswerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.ReportAnswerRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_proto.ReportAnswerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.ReportAnswerRequest.displayName = 'proto.api_proto.ReportAnswerRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.AuthViewCreateIfNoUserRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_proto.AuthViewCreateIfNoUserRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.AuthViewCreateIfNoUserRequest.displayName = 'proto.api_proto.AuthViewCreateIfNoUserRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.AuthViewCreateIfNoUserResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_proto.AuthViewCreateIfNoUserResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.AuthViewCreateIfNoUserResponse.displayName = 'proto.api_proto.AuthViewCreateIfNoUserResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.NotificationAnswer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api_proto.NotificationAnswer.repeatedFields_, null);
};
goog.inherits(proto.api_proto.NotificationAnswer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.NotificationAnswer.displayName = 'proto.api_proto.NotificationAnswer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.NotificationGetNotificationsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_proto.NotificationGetNotificationsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.NotificationGetNotificationsRequest.displayName = 'proto.api_proto.NotificationGetNotificationsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.NotificationGetNotificationsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api_proto.NotificationGetNotificationsResponse.repeatedFields_, null);
};
goog.inherits(proto.api_proto.NotificationGetNotificationsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.NotificationGetNotificationsResponse.displayName = 'proto.api_proto.NotificationGetNotificationsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.LandingViewFinishOnboardingRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_proto.LandingViewFinishOnboardingRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.LandingViewFinishOnboardingRequest.displayName = 'proto.api_proto.LandingViewFinishOnboardingRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.LandingViewFinishOnboardingResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_proto.LandingViewFinishOnboardingResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.LandingViewFinishOnboardingResponse.displayName = 'proto.api_proto.LandingViewFinishOnboardingResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.ProfileViewQuestion = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.api_proto.ProfileViewQuestion.oneofGroups_);
};
goog.inherits(proto.api_proto.ProfileViewQuestion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.ProfileViewQuestion.displayName = 'proto.api_proto.ProfileViewQuestion';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.ProfileViewGetUserRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_proto.ProfileViewGetUserRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.ProfileViewGetUserRequest.displayName = 'proto.api_proto.ProfileViewGetUserRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.ProfileViewGetUserResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api_proto.ProfileViewGetUserResponse.repeatedFields_, null);
};
goog.inherits(proto.api_proto.ProfileViewGetUserResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.ProfileViewGetUserResponse.displayName = 'proto.api_proto.ProfileViewGetUserResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.ProfileViewGetAllUsersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api_proto.ProfileViewGetAllUsersResponse.repeatedFields_, null);
};
goog.inherits(proto.api_proto.ProfileViewGetAllUsersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.ProfileViewGetAllUsersResponse.displayName = 'proto.api_proto.ProfileViewGetAllUsersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.AskSpaceViewGetDefaultQuestionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_proto.AskSpaceViewGetDefaultQuestionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.AskSpaceViewGetDefaultQuestionRequest.displayName = 'proto.api_proto.AskSpaceViewGetDefaultQuestionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.AskSpaceViewGetDefaultQuestionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_proto.AskSpaceViewGetDefaultQuestionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.AskSpaceViewGetDefaultQuestionResponse.displayName = 'proto.api_proto.AskSpaceViewGetDefaultQuestionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.AskSpaceViewGetCustomQuestionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_proto.AskSpaceViewGetCustomQuestionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.AskSpaceViewGetCustomQuestionsRequest.displayName = 'proto.api_proto.AskSpaceViewGetCustomQuestionsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.AskSpaceViewGetCustomQuestionsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api_proto.AskSpaceViewGetCustomQuestionsResponse.repeatedFields_, null);
};
goog.inherits(proto.api_proto.AskSpaceViewGetCustomQuestionsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.AskSpaceViewGetCustomQuestionsResponse.displayName = 'proto.api_proto.AskSpaceViewGetCustomQuestionsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.AskSpaceViewBuyAnswersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_proto.AskSpaceViewBuyAnswersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.AskSpaceViewBuyAnswersRequest.displayName = 'proto.api_proto.AskSpaceViewBuyAnswersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.AskSpaceViewBuyAnswersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api_proto.AskSpaceViewBuyAnswersResponse.repeatedFields_, null);
};
goog.inherits(proto.api_proto.AskSpaceViewBuyAnswersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.AskSpaceViewBuyAnswersResponse.displayName = 'proto.api_proto.AskSpaceViewBuyAnswersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.NearbyViewGetQuestionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_proto.NearbyViewGetQuestionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.NearbyViewGetQuestionsRequest.displayName = 'proto.api_proto.NearbyViewGetQuestionsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.NearbyViewCustomQuestion = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_proto.NearbyViewCustomQuestion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.NearbyViewCustomQuestion.displayName = 'proto.api_proto.NearbyViewCustomQuestion';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.NearbyViewDefaultQuestion = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_proto.NearbyViewDefaultQuestion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.NearbyViewDefaultQuestion.displayName = 'proto.api_proto.NearbyViewDefaultQuestion';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.NearbyViewGetQuestionsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api_proto.NearbyViewGetQuestionsResponse.repeatedFields_, null);
};
goog.inherits(proto.api_proto.NearbyViewGetQuestionsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.NearbyViewGetQuestionsResponse.displayName = 'proto.api_proto.NearbyViewGetQuestionsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.AnyNearbyViewQuestion = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.api_proto.AnyNearbyViewQuestion.oneofGroups_);
};
goog.inherits(proto.api_proto.AnyNearbyViewQuestion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.AnyNearbyViewQuestion.displayName = 'proto.api_proto.AnyNearbyViewQuestion';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.NearbyViewGetQuestionsResponseCombined = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api_proto.NearbyViewGetQuestionsResponseCombined.repeatedFields_, null);
};
goog.inherits(proto.api_proto.NearbyViewGetQuestionsResponseCombined, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.NearbyViewGetQuestionsResponseCombined.displayName = 'proto.api_proto.NearbyViewGetQuestionsResponseCombined';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.TransactionObject = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_proto.TransactionObject, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.TransactionObject.displayName = 'proto.api_proto.TransactionObject';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.GetAllTransactionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_proto.GetAllTransactionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.GetAllTransactionsRequest.displayName = 'proto.api_proto.GetAllTransactionsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.GetAllTransactionsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api_proto.GetAllTransactionsResponse.repeatedFields_, null);
};
goog.inherits(proto.api_proto.GetAllTransactionsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.GetAllTransactionsResponse.displayName = 'proto.api_proto.GetAllTransactionsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.SearchSpaceByNameRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_proto.SearchSpaceByNameRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.SearchSpaceByNameRequest.displayName = 'proto.api_proto.SearchSpaceByNameRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.SearchSpaceByNameResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api_proto.SearchSpaceByNameResponse.repeatedFields_, null);
};
goog.inherits(proto.api_proto.SearchSpaceByNameResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.SearchSpaceByNameResponse.displayName = 'proto.api_proto.SearchSpaceByNameResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.AddPartialSpaceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_proto.AddPartialSpaceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.AddPartialSpaceRequest.displayName = 'proto.api_proto.AddPartialSpaceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.AddPartialSpaceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_proto.AddPartialSpaceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.AddPartialSpaceResponse.displayName = 'proto.api_proto.AddPartialSpaceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.AddFullSpaceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_proto.AddFullSpaceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.AddFullSpaceRequest.displayName = 'proto.api_proto.AddFullSpaceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.AddFullSpaceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_proto.AddFullSpaceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.AddFullSpaceResponse.displayName = 'proto.api_proto.AddFullSpaceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.GetSpaceDetailsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_proto.GetSpaceDetailsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.GetSpaceDetailsRequest.displayName = 'proto.api_proto.GetSpaceDetailsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.GetSpaceDetailsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_proto.GetSpaceDetailsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.GetSpaceDetailsResponse.displayName = 'proto.api_proto.GetSpaceDetailsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.GetBulkSpaceDetailsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api_proto.GetBulkSpaceDetailsRequest.repeatedFields_, null);
};
goog.inherits(proto.api_proto.GetBulkSpaceDetailsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.GetBulkSpaceDetailsRequest.displayName = 'proto.api_proto.GetBulkSpaceDetailsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.GetBulkSpaceDetailsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api_proto.GetBulkSpaceDetailsResponse.repeatedFields_, null);
};
goog.inherits(proto.api_proto.GetBulkSpaceDetailsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.GetBulkSpaceDetailsResponse.displayName = 'proto.api_proto.GetBulkSpaceDetailsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.GetNearbySpaceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_proto.GetNearbySpaceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.GetNearbySpaceRequest.displayName = 'proto.api_proto.GetNearbySpaceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.GetNearbySpaceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api_proto.GetNearbySpaceResponse.repeatedFields_, null);
};
goog.inherits(proto.api_proto.GetNearbySpaceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.GetNearbySpaceResponse.displayName = 'proto.api_proto.GetNearbySpaceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.DeleteQuestionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_proto.DeleteQuestionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.DeleteQuestionRequest.displayName = 'proto.api_proto.DeleteQuestionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.DeleteQuestionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_proto.DeleteQuestionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.DeleteQuestionResponse.displayName = 'proto.api_proto.DeleteQuestionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.GetAllSpacesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api_proto.GetAllSpacesResponse.repeatedFields_, null);
};
goog.inherits(proto.api_proto.GetAllSpacesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.GetAllSpacesResponse.displayName = 'proto.api_proto.GetAllSpacesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.UpdateSpaceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_proto.UpdateSpaceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.UpdateSpaceRequest.displayName = 'proto.api_proto.UpdateSpaceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.UpdateSpaceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_proto.UpdateSpaceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.UpdateSpaceResponse.displayName = 'proto.api_proto.UpdateSpaceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.GetAllAnswersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_proto.GetAllAnswersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.GetAllAnswersRequest.displayName = 'proto.api_proto.GetAllAnswersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.GetAllAnswersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api_proto.GetAllAnswersResponse.repeatedFields_, null);
};
goog.inherits(proto.api_proto.GetAllAnswersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.GetAllAnswersResponse.displayName = 'proto.api_proto.GetAllAnswersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.GetAllQuestionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api_proto.GetAllQuestionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.GetAllQuestionsRequest.displayName = 'proto.api_proto.GetAllQuestionsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api_proto.GetAllQuestionsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api_proto.GetAllQuestionsResponse.repeatedFields_, null);
};
goog.inherits(proto.api_proto.GetAllQuestionsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.api_proto.GetAllQuestionsResponse.displayName = 'proto.api_proto.GetAllQuestionsResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.Coordinates.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.Coordinates.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.Coordinates} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.Coordinates.toObject = function(includeInstance, msg) {
  var f, obj = {
    latitude: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),
    longitude: +jspb.Message.getFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.Coordinates}
 */
proto.api_proto.Coordinates.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.Coordinates;
  return proto.api_proto.Coordinates.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.Coordinates} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.Coordinates}
 */
proto.api_proto.Coordinates.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLatitude(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLongitude(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.Coordinates.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.Coordinates.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.Coordinates} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.Coordinates.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLatitude();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getLongitude();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional double latitude = 1;
 * @return {number}
 */
proto.api_proto.Coordinates.prototype.getLatitude = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.api_proto.Coordinates.prototype.setLatitude = function(value) {
  jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double longitude = 2;
 * @return {number}
 */
proto.api_proto.Coordinates.prototype.getLongitude = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.api_proto.Coordinates.prototype.setLongitude = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.Space.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.Space.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.Space} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.Space.toObject = function(includeInstance, msg) {
  var f, obj = {
    spaceId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    coordinates: (f = msg.getCoordinates()) && proto.api_proto.Coordinates.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.Space}
 */
proto.api_proto.Space.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.Space;
  return proto.api_proto.Space.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.Space} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.Space}
 */
proto.api_proto.Space.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSpaceId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = new proto.api_proto.Coordinates;
      reader.readMessage(value,proto.api_proto.Coordinates.deserializeBinaryFromReader);
      msg.setCoordinates(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.Space.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.Space.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.Space} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.Space.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSpaceId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCoordinates();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api_proto.Coordinates.serializeBinaryToWriter
    );
  }
};


/**
 * optional string space_id = 1;
 * @return {string}
 */
proto.api_proto.Space.prototype.getSpaceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.api_proto.Space.prototype.setSpaceId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.api_proto.Space.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.api_proto.Space.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Coordinates coordinates = 3;
 * @return {?proto.api_proto.Coordinates}
 */
proto.api_proto.Space.prototype.getCoordinates = function() {
  return /** @type{?proto.api_proto.Coordinates} */ (
    jspb.Message.getWrapperField(this, proto.api_proto.Coordinates, 3));
};


/** @param {?proto.api_proto.Coordinates|undefined} value */
proto.api_proto.Space.prototype.setCoordinates = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.api_proto.Space.prototype.clearCoordinates = function() {
  this.setCoordinates(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_proto.Space.prototype.hasCoordinates = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api_proto.SpaceDetail.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.SpaceDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.SpaceDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.SpaceDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.SpaceDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    space: (f = msg.getSpace()) && proto.api_proto.Space.toObject(includeInstance, f),
    aliasList: jspb.Message.getRepeatedField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.SpaceDetail}
 */
proto.api_proto.SpaceDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.SpaceDetail;
  return proto.api_proto.SpaceDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.SpaceDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.SpaceDetail}
 */
proto.api_proto.SpaceDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_proto.Space;
      reader.readMessage(value,proto.api_proto.Space.deserializeBinaryFromReader);
      msg.setSpace(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addAlias(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.SpaceDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.SpaceDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.SpaceDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.SpaceDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSpace();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api_proto.Space.serializeBinaryToWriter
    );
  }
  f = message.getAliasList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional Space space = 1;
 * @return {?proto.api_proto.Space}
 */
proto.api_proto.SpaceDetail.prototype.getSpace = function() {
  return /** @type{?proto.api_proto.Space} */ (
    jspb.Message.getWrapperField(this, proto.api_proto.Space, 1));
};


/** @param {?proto.api_proto.Space|undefined} value */
proto.api_proto.SpaceDetail.prototype.setSpace = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.api_proto.SpaceDetail.prototype.clearSpace = function() {
  this.setSpace(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_proto.SpaceDetail.prototype.hasSpace = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated string alias = 2;
 * @return {!Array<string>}
 */
proto.api_proto.SpaceDetail.prototype.getAliasList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array<string>} value */
proto.api_proto.SpaceDetail.prototype.setAliasList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.api_proto.SpaceDetail.prototype.addAlias = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.api_proto.SpaceDetail.prototype.clearAliasList = function() {
  this.setAliasList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.SearchResult.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.SearchResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.SearchResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.SearchResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.SearchResult}
 */
proto.api_proto.SearchResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.SearchResult;
  return proto.api_proto.SearchResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.SearchResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.SearchResult}
 */
proto.api_proto.SearchResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.SearchResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.SearchResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.SearchResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.SearchResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.api_proto.SearchResult.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.api_proto.SearchResult.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string id = 2;
 * @return {string}
 */
proto.api_proto.SearchResult.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.api_proto.SearchResult.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.AppVersion.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.AppVersion.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.AppVersion} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.AppVersion.toObject = function(includeInstance, msg) {
  var f, obj = {
    version: +jspb.Message.getFieldWithDefault(msg, 1, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.AppVersion}
 */
proto.api_proto.AppVersion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.AppVersion;
  return proto.api_proto.AppVersion.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.AppVersion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.AppVersion}
 */
proto.api_proto.AppVersion.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setVersion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.AppVersion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.AppVersion.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.AppVersion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.AppVersion.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVersion();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
};


/**
 * optional double version = 1;
 * @return {number}
 */
proto.api_proto.AppVersion.prototype.getVersion = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.api_proto.AppVersion.prototype.setVersion = function(value) {
  jspb.Message.setProto3FloatField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.User.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.User.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.User} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.User.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    firstName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    lastName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    photoUrl: jspb.Message.getFieldWithDefault(msg, 4, ""),
    isOnboarding: jspb.Message.getFieldWithDefault(msg, 5, false),
    points: jspb.Message.getFieldWithDefault(msg, 6, 0),
    numThanks: jspb.Message.getFieldWithDefault(msg, 7, 0),
    numRevokes: jspb.Message.getFieldWithDefault(msg, 8, 0),
    isAdmin: jspb.Message.getFieldWithDefault(msg, 9, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.User}
 */
proto.api_proto.User.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.User;
  return proto.api_proto.User.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.User} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.User}
 */
proto.api_proto.User.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhotoUrl(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsOnboarding(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setPoints(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNumThanks(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNumRevokes(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsAdmin(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.User.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.User.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.User} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.User.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFirstName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLastName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPhotoUrl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getIsOnboarding();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getPoints();
  if (f !== 0) {
    writer.writeSint32(
      6,
      f
    );
  }
  f = message.getNumThanks();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getNumRevokes();
  if (f !== 0) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = message.getIsAdmin();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.api_proto.User.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.api_proto.User.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string first_name = 2;
 * @return {string}
 */
proto.api_proto.User.prototype.getFirstName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.api_proto.User.prototype.setFirstName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string last_name = 3;
 * @return {string}
 */
proto.api_proto.User.prototype.getLastName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.api_proto.User.prototype.setLastName = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string photo_url = 4;
 * @return {string}
 */
proto.api_proto.User.prototype.getPhotoUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.api_proto.User.prototype.setPhotoUrl = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool is_onboarding = 5;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.api_proto.User.prototype.getIsOnboarding = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.api_proto.User.prototype.setIsOnboarding = function(value) {
  jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional sint32 points = 6;
 * @return {number}
 */
proto.api_proto.User.prototype.getPoints = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.api_proto.User.prototype.setPoints = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint32 num_thanks = 7;
 * @return {number}
 */
proto.api_proto.User.prototype.getNumThanks = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.api_proto.User.prototype.setNumThanks = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint32 num_revokes = 8;
 * @return {number}
 */
proto.api_proto.User.prototype.getNumRevokes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.api_proto.User.prototype.setNumRevokes = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional bool is_admin = 9;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.api_proto.User.prototype.getIsAdmin = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 9, false));
};


/** @param {boolean} value */
proto.api_proto.User.prototype.setIsAdmin = function(value) {
  jspb.Message.setProto3BooleanField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.Thanker.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.Thanker.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.Thanker} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.Thanker.toObject = function(includeInstance, msg) {
  var f, obj = {
    firstName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    lastName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    photoUrl: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.Thanker}
 */
proto.api_proto.Thanker.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.Thanker;
  return proto.api_proto.Thanker.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.Thanker} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.Thanker}
 */
proto.api_proto.Thanker.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhotoUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.Thanker.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.Thanker.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.Thanker} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.Thanker.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFirstName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLastName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPhotoUrl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string first_name = 1;
 * @return {string}
 */
proto.api_proto.Thanker.prototype.getFirstName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.api_proto.Thanker.prototype.setFirstName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string last_name = 2;
 * @return {string}
 */
proto.api_proto.Thanker.prototype.getLastName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.api_proto.Thanker.prototype.setLastName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string photo_url = 3;
 * @return {string}
 */
proto.api_proto.Thanker.prototype.getPhotoUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.api_proto.Thanker.prototype.setPhotoUrl = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.Answer.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.Answer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.Answer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.Answer.toObject = function(includeInstance, msg) {
  var f, obj = {
    answerId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    answerText: jspb.Message.getFieldWithDefault(msg, 2, ""),
    answeredBy: (f = msg.getAnsweredBy()) && proto.api_proto.User.toObject(includeInstance, f),
    createdAt: jspb.Message.getFieldWithDefault(msg, 4, 0),
    space: (f = msg.getSpace()) && proto.api_proto.Space.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.Answer}
 */
proto.api_proto.Answer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.Answer;
  return proto.api_proto.Answer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.Answer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.Answer}
 */
proto.api_proto.Answer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAnswerId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAnswerText(value);
      break;
    case 3:
      var value = new proto.api_proto.User;
      reader.readMessage(value,proto.api_proto.User.deserializeBinaryFromReader);
      msg.setAnsweredBy(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreatedAt(value);
      break;
    case 5:
      var value = new proto.api_proto.Space;
      reader.readMessage(value,proto.api_proto.Space.deserializeBinaryFromReader);
      msg.setSpace(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.Answer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.Answer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.Answer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.Answer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAnswerId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAnswerText();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAnsweredBy();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api_proto.User.serializeBinaryToWriter
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getSpace();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.api_proto.Space.serializeBinaryToWriter
    );
  }
};


/**
 * optional string answer_id = 1;
 * @return {string}
 */
proto.api_proto.Answer.prototype.getAnswerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.api_proto.Answer.prototype.setAnswerId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string answer_text = 2;
 * @return {string}
 */
proto.api_proto.Answer.prototype.getAnswerText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.api_proto.Answer.prototype.setAnswerText = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional User answered_by = 3;
 * @return {?proto.api_proto.User}
 */
proto.api_proto.Answer.prototype.getAnsweredBy = function() {
  return /** @type{?proto.api_proto.User} */ (
    jspb.Message.getWrapperField(this, proto.api_proto.User, 3));
};


/** @param {?proto.api_proto.User|undefined} value */
proto.api_proto.Answer.prototype.setAnsweredBy = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.api_proto.Answer.prototype.clearAnsweredBy = function() {
  this.setAnsweredBy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_proto.Answer.prototype.hasAnsweredBy = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint64 created_at = 4;
 * @return {number}
 */
proto.api_proto.Answer.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.api_proto.Answer.prototype.setCreatedAt = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional Space space = 5;
 * @return {?proto.api_proto.Space}
 */
proto.api_proto.Answer.prototype.getSpace = function() {
  return /** @type{?proto.api_proto.Space} */ (
    jspb.Message.getWrapperField(this, proto.api_proto.Space, 5));
};


/** @param {?proto.api_proto.Space|undefined} value */
proto.api_proto.Answer.prototype.setSpace = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.api_proto.Answer.prototype.clearSpace = function() {
  this.setSpace(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_proto.Answer.prototype.hasSpace = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.CustomQuestion.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.CustomQuestion.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.CustomQuestion} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.CustomQuestion.toObject = function(includeInstance, msg) {
  var f, obj = {
    customQuestionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    questionText: jspb.Message.getFieldWithDefault(msg, 2, ""),
    price: jspb.Message.getFieldWithDefault(msg, 3, 0),
    status: jspb.Message.getFieldWithDefault(msg, 4, 0),
    statusUpdatedAt: jspb.Message.getFieldWithDefault(msg, 5, 0),
    createdAt: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.CustomQuestion}
 */
proto.api_proto.CustomQuestion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.CustomQuestion;
  return proto.api_proto.CustomQuestion.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.CustomQuestion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.CustomQuestion}
 */
proto.api_proto.CustomQuestion.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomQuestionId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestionText(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPrice(value);
      break;
    case 4:
      var value = /** @type {!proto.api_proto.CustomQuestionStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setStatusUpdatedAt(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.CustomQuestion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.CustomQuestion.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.CustomQuestion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.CustomQuestion.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomQuestionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQuestionText();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getStatusUpdatedAt();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
};


/**
 * optional string custom_question_id = 1;
 * @return {string}
 */
proto.api_proto.CustomQuestion.prototype.getCustomQuestionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.api_proto.CustomQuestion.prototype.setCustomQuestionId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string question_text = 2;
 * @return {string}
 */
proto.api_proto.CustomQuestion.prototype.getQuestionText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.api_proto.CustomQuestion.prototype.setQuestionText = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint32 price = 3;
 * @return {number}
 */
proto.api_proto.CustomQuestion.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.api_proto.CustomQuestion.prototype.setPrice = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional CustomQuestionStatus status = 4;
 * @return {!proto.api_proto.CustomQuestionStatus}
 */
proto.api_proto.CustomQuestion.prototype.getStatus = function() {
  return /** @type {!proto.api_proto.CustomQuestionStatus} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.api_proto.CustomQuestionStatus} value */
proto.api_proto.CustomQuestion.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional uint64 status_updated_at = 5;
 * @return {number}
 */
proto.api_proto.CustomQuestion.prototype.getStatusUpdatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.api_proto.CustomQuestion.prototype.setStatusUpdatedAt = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint64 created_at = 6;
 * @return {number}
 */
proto.api_proto.CustomQuestion.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.api_proto.CustomQuestion.prototype.setCreatedAt = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api_proto.FullCustomQuestion.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.FullCustomQuestion.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.FullCustomQuestion.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.FullCustomQuestion} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.FullCustomQuestion.toObject = function(includeInstance, msg) {
  var f, obj = {
    question: (f = msg.getQuestion()) && proto.api_proto.CustomQuestion.toObject(includeInstance, f),
    space: (f = msg.getSpace()) && proto.api_proto.Space.toObject(includeInstance, f),
    askedBy: (f = msg.getAskedBy()) && proto.api_proto.User.toObject(includeInstance, f),
    answersList: jspb.Message.toObjectList(msg.getAnswersList(),
    proto.api_proto.Answer.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.FullCustomQuestion}
 */
proto.api_proto.FullCustomQuestion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.FullCustomQuestion;
  return proto.api_proto.FullCustomQuestion.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.FullCustomQuestion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.FullCustomQuestion}
 */
proto.api_proto.FullCustomQuestion.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_proto.CustomQuestion;
      reader.readMessage(value,proto.api_proto.CustomQuestion.deserializeBinaryFromReader);
      msg.setQuestion(value);
      break;
    case 2:
      var value = new proto.api_proto.Space;
      reader.readMessage(value,proto.api_proto.Space.deserializeBinaryFromReader);
      msg.setSpace(value);
      break;
    case 3:
      var value = new proto.api_proto.User;
      reader.readMessage(value,proto.api_proto.User.deserializeBinaryFromReader);
      msg.setAskedBy(value);
      break;
    case 4:
      var value = new proto.api_proto.Answer;
      reader.readMessage(value,proto.api_proto.Answer.deserializeBinaryFromReader);
      msg.addAnswers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.FullCustomQuestion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.FullCustomQuestion.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.FullCustomQuestion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.FullCustomQuestion.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuestion();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api_proto.CustomQuestion.serializeBinaryToWriter
    );
  }
  f = message.getSpace();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api_proto.Space.serializeBinaryToWriter
    );
  }
  f = message.getAskedBy();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api_proto.User.serializeBinaryToWriter
    );
  }
  f = message.getAnswersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.api_proto.Answer.serializeBinaryToWriter
    );
  }
};


/**
 * optional CustomQuestion question = 1;
 * @return {?proto.api_proto.CustomQuestion}
 */
proto.api_proto.FullCustomQuestion.prototype.getQuestion = function() {
  return /** @type{?proto.api_proto.CustomQuestion} */ (
    jspb.Message.getWrapperField(this, proto.api_proto.CustomQuestion, 1));
};


/** @param {?proto.api_proto.CustomQuestion|undefined} value */
proto.api_proto.FullCustomQuestion.prototype.setQuestion = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.api_proto.FullCustomQuestion.prototype.clearQuestion = function() {
  this.setQuestion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_proto.FullCustomQuestion.prototype.hasQuestion = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Space space = 2;
 * @return {?proto.api_proto.Space}
 */
proto.api_proto.FullCustomQuestion.prototype.getSpace = function() {
  return /** @type{?proto.api_proto.Space} */ (
    jspb.Message.getWrapperField(this, proto.api_proto.Space, 2));
};


/** @param {?proto.api_proto.Space|undefined} value */
proto.api_proto.FullCustomQuestion.prototype.setSpace = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.api_proto.FullCustomQuestion.prototype.clearSpace = function() {
  this.setSpace(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_proto.FullCustomQuestion.prototype.hasSpace = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional User asked_by = 3;
 * @return {?proto.api_proto.User}
 */
proto.api_proto.FullCustomQuestion.prototype.getAskedBy = function() {
  return /** @type{?proto.api_proto.User} */ (
    jspb.Message.getWrapperField(this, proto.api_proto.User, 3));
};


/** @param {?proto.api_proto.User|undefined} value */
proto.api_proto.FullCustomQuestion.prototype.setAskedBy = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.api_proto.FullCustomQuestion.prototype.clearAskedBy = function() {
  this.setAskedBy(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_proto.FullCustomQuestion.prototype.hasAskedBy = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated Answer answers = 4;
 * @return {!Array<!proto.api_proto.Answer>}
 */
proto.api_proto.FullCustomQuestion.prototype.getAnswersList = function() {
  return /** @type{!Array<!proto.api_proto.Answer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api_proto.Answer, 4));
};


/** @param {!Array<!proto.api_proto.Answer>} value */
proto.api_proto.FullCustomQuestion.prototype.setAnswersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.api_proto.Answer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api_proto.Answer}
 */
proto.api_proto.FullCustomQuestion.prototype.addAnswers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.api_proto.Answer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.api_proto.FullCustomQuestion.prototype.clearAnswersList = function() {
  this.setAnswersList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.api_proto.AnswerValue.oneofGroups_ = [[1,2,3,4]];

/**
 * @enum {number}
 */
proto.api_proto.AnswerValue.AnswerCase = {
  ANSWER_NOT_SET: 0,
  BOOLEAN_VALUE: 1,
  INTEGER_VALUE: 2,
  DOUBLE_VALUE: 3,
  TEXT_VALUE: 4
};

/**
 * @return {proto.api_proto.AnswerValue.AnswerCase}
 */
proto.api_proto.AnswerValue.prototype.getAnswerCase = function() {
  return /** @type {proto.api_proto.AnswerValue.AnswerCase} */(jspb.Message.computeOneofCase(this, proto.api_proto.AnswerValue.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.AnswerValue.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.AnswerValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.AnswerValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.AnswerValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    booleanValue: jspb.Message.getFieldWithDefault(msg, 1, false),
    integerValue: jspb.Message.getFieldWithDefault(msg, 2, 0),
    doubleValue: +jspb.Message.getFieldWithDefault(msg, 3, 0.0),
    textValue: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.AnswerValue}
 */
proto.api_proto.AnswerValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.AnswerValue;
  return proto.api_proto.AnswerValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.AnswerValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.AnswerValue}
 */
proto.api_proto.AnswerValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBooleanValue(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIntegerValue(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDoubleValue(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTextValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.AnswerValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.AnswerValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.AnswerValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.AnswerValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional bool boolean_value = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.api_proto.AnswerValue.prototype.getBooleanValue = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.api_proto.AnswerValue.prototype.setBooleanValue = function(value) {
  jspb.Message.setOneofField(this, 1, proto.api_proto.AnswerValue.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 */
proto.api_proto.AnswerValue.prototype.clearBooleanValue = function() {
  jspb.Message.setOneofField(this, 1, proto.api_proto.AnswerValue.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_proto.AnswerValue.prototype.hasBooleanValue = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 integer_value = 2;
 * @return {number}
 */
proto.api_proto.AnswerValue.prototype.getIntegerValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.api_proto.AnswerValue.prototype.setIntegerValue = function(value) {
  jspb.Message.setOneofField(this, 2, proto.api_proto.AnswerValue.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 */
proto.api_proto.AnswerValue.prototype.clearIntegerValue = function() {
  jspb.Message.setOneofField(this, 2, proto.api_proto.AnswerValue.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_proto.AnswerValue.prototype.hasIntegerValue = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double double_value = 3;
 * @return {number}
 */
proto.api_proto.AnswerValue.prototype.getDoubleValue = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.api_proto.AnswerValue.prototype.setDoubleValue = function(value) {
  jspb.Message.setOneofField(this, 3, proto.api_proto.AnswerValue.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 */
proto.api_proto.AnswerValue.prototype.clearDoubleValue = function() {
  jspb.Message.setOneofField(this, 3, proto.api_proto.AnswerValue.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_proto.AnswerValue.prototype.hasDoubleValue = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string text_value = 4;
 * @return {string}
 */
proto.api_proto.AnswerValue.prototype.getTextValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.api_proto.AnswerValue.prototype.setTextValue = function(value) {
  jspb.Message.setOneofField(this, 4, proto.api_proto.AnswerValue.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 */
proto.api_proto.AnswerValue.prototype.clearTextValue = function() {
  jspb.Message.setOneofField(this, 4, proto.api_proto.AnswerValue.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_proto.AnswerValue.prototype.hasTextValue = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.DefaultAnswerOption.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.DefaultAnswerOption.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.DefaultAnswerOption} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.DefaultAnswerOption.toObject = function(includeInstance, msg) {
  var f, obj = {
    displayText: jspb.Message.getFieldWithDefault(msg, 1, ""),
    iconUrl: jspb.Message.getFieldWithDefault(msg, 2, ""),
    colorHex: jspb.Message.getFieldWithDefault(msg, 3, ""),
    answerValue: (f = msg.getAnswerValue()) && proto.api_proto.AnswerValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.DefaultAnswerOption}
 */
proto.api_proto.DefaultAnswerOption.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.DefaultAnswerOption;
  return proto.api_proto.DefaultAnswerOption.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.DefaultAnswerOption} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.DefaultAnswerOption}
 */
proto.api_proto.DefaultAnswerOption.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayText(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setIconUrl(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setColorHex(value);
      break;
    case 4:
      var value = new proto.api_proto.AnswerValue;
      reader.readMessage(value,proto.api_proto.AnswerValue.deserializeBinaryFromReader);
      msg.setAnswerValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.DefaultAnswerOption.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.DefaultAnswerOption.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.DefaultAnswerOption} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.DefaultAnswerOption.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDisplayText();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIconUrl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getColorHex();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAnswerValue();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.api_proto.AnswerValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional string display_text = 1;
 * @return {string}
 */
proto.api_proto.DefaultAnswerOption.prototype.getDisplayText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.api_proto.DefaultAnswerOption.prototype.setDisplayText = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string icon_url = 2;
 * @return {string}
 */
proto.api_proto.DefaultAnswerOption.prototype.getIconUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.api_proto.DefaultAnswerOption.prototype.setIconUrl = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string color_hex = 3;
 * @return {string}
 */
proto.api_proto.DefaultAnswerOption.prototype.getColorHex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.api_proto.DefaultAnswerOption.prototype.setColorHex = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional AnswerValue answer_value = 4;
 * @return {?proto.api_proto.AnswerValue}
 */
proto.api_proto.DefaultAnswerOption.prototype.getAnswerValue = function() {
  return /** @type{?proto.api_proto.AnswerValue} */ (
    jspb.Message.getWrapperField(this, proto.api_proto.AnswerValue, 4));
};


/** @param {?proto.api_proto.AnswerValue|undefined} value */
proto.api_proto.DefaultAnswerOption.prototype.setAnswerValue = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.api_proto.DefaultAnswerOption.prototype.clearAnswerValue = function() {
  this.setAnswerValue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_proto.DefaultAnswerOption.prototype.hasAnswerValue = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api_proto.DefaultQuestion.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.DefaultQuestion.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.DefaultQuestion.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.DefaultQuestion} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.DefaultQuestion.toObject = function(includeInstance, msg) {
  var f, obj = {
    defaultQuestionId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    askerDisplayText: jspb.Message.getFieldWithDefault(msg, 2, ""),
    answererDisplayText: jspb.Message.getFieldWithDefault(msg, 3, ""),
    price: jspb.Message.getFieldWithDefault(msg, 4, 0),
    numUsersWaiting: jspb.Message.getFieldWithDefault(msg, 5, 0),
    lastAnsweredAt: jspb.Message.getFieldWithDefault(msg, 6, 0),
    answerOptionsList: jspb.Message.toObjectList(msg.getAnswerOptionsList(),
    proto.api_proto.DefaultAnswerOption.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.DefaultQuestion}
 */
proto.api_proto.DefaultQuestion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.DefaultQuestion;
  return proto.api_proto.DefaultQuestion.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.DefaultQuestion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.DefaultQuestion}
 */
proto.api_proto.DefaultQuestion.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefaultQuestionId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAskerDisplayText(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAnswererDisplayText(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPrice(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNumUsersWaiting(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLastAnsweredAt(value);
      break;
    case 7:
      var value = new proto.api_proto.DefaultAnswerOption;
      reader.readMessage(value,proto.api_proto.DefaultAnswerOption.deserializeBinaryFromReader);
      msg.addAnswerOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.DefaultQuestion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.DefaultQuestion.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.DefaultQuestion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.DefaultQuestion.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDefaultQuestionId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAskerDisplayText();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAnswererDisplayText();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getNumUsersWaiting();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getLastAnsweredAt();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getAnswerOptionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.api_proto.DefaultAnswerOption.serializeBinaryToWriter
    );
  }
};


/**
 * optional string default_question_id = 1;
 * @return {string}
 */
proto.api_proto.DefaultQuestion.prototype.getDefaultQuestionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.api_proto.DefaultQuestion.prototype.setDefaultQuestionId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string asker_display_text = 2;
 * @return {string}
 */
proto.api_proto.DefaultQuestion.prototype.getAskerDisplayText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.api_proto.DefaultQuestion.prototype.setAskerDisplayText = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string answerer_display_text = 3;
 * @return {string}
 */
proto.api_proto.DefaultQuestion.prototype.getAnswererDisplayText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.api_proto.DefaultQuestion.prototype.setAnswererDisplayText = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint32 price = 4;
 * @return {number}
 */
proto.api_proto.DefaultQuestion.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.api_proto.DefaultQuestion.prototype.setPrice = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 num_users_waiting = 5;
 * @return {number}
 */
proto.api_proto.DefaultQuestion.prototype.getNumUsersWaiting = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.api_proto.DefaultQuestion.prototype.setNumUsersWaiting = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint64 last_answered_at = 6;
 * @return {number}
 */
proto.api_proto.DefaultQuestion.prototype.getLastAnsweredAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.api_proto.DefaultQuestion.prototype.setLastAnsweredAt = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * repeated DefaultAnswerOption answer_options = 7;
 * @return {!Array<!proto.api_proto.DefaultAnswerOption>}
 */
proto.api_proto.DefaultQuestion.prototype.getAnswerOptionsList = function() {
  return /** @type{!Array<!proto.api_proto.DefaultAnswerOption>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api_proto.DefaultAnswerOption, 7));
};


/** @param {!Array<!proto.api_proto.DefaultAnswerOption>} value */
proto.api_proto.DefaultQuestion.prototype.setAnswerOptionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.api_proto.DefaultAnswerOption=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api_proto.DefaultAnswerOption}
 */
proto.api_proto.DefaultQuestion.prototype.addAnswerOptions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.api_proto.DefaultAnswerOption, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.api_proto.DefaultQuestion.prototype.clearAnswerOptionsList = function() {
  this.setAnswerOptionsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api_proto.FullDefaultQuestion.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.FullDefaultQuestion.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.FullDefaultQuestion.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.FullDefaultQuestion} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.FullDefaultQuestion.toObject = function(includeInstance, msg) {
  var f, obj = {
    question: (f = msg.getQuestion()) && proto.api_proto.DefaultQuestion.toObject(includeInstance, f),
    space: (f = msg.getSpace()) && proto.api_proto.Space.toObject(includeInstance, f),
    answersList: jspb.Message.toObjectList(msg.getAnswersList(),
    proto.api_proto.Answer.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.FullDefaultQuestion}
 */
proto.api_proto.FullDefaultQuestion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.FullDefaultQuestion;
  return proto.api_proto.FullDefaultQuestion.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.FullDefaultQuestion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.FullDefaultQuestion}
 */
proto.api_proto.FullDefaultQuestion.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_proto.DefaultQuestion;
      reader.readMessage(value,proto.api_proto.DefaultQuestion.deserializeBinaryFromReader);
      msg.setQuestion(value);
      break;
    case 2:
      var value = new proto.api_proto.Space;
      reader.readMessage(value,proto.api_proto.Space.deserializeBinaryFromReader);
      msg.setSpace(value);
      break;
    case 3:
      var value = new proto.api_proto.Answer;
      reader.readMessage(value,proto.api_proto.Answer.deserializeBinaryFromReader);
      msg.addAnswers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.FullDefaultQuestion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.FullDefaultQuestion.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.FullDefaultQuestion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.FullDefaultQuestion.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuestion();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api_proto.DefaultQuestion.serializeBinaryToWriter
    );
  }
  f = message.getSpace();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api_proto.Space.serializeBinaryToWriter
    );
  }
  f = message.getAnswersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.api_proto.Answer.serializeBinaryToWriter
    );
  }
};


/**
 * optional DefaultQuestion question = 1;
 * @return {?proto.api_proto.DefaultQuestion}
 */
proto.api_proto.FullDefaultQuestion.prototype.getQuestion = function() {
  return /** @type{?proto.api_proto.DefaultQuestion} */ (
    jspb.Message.getWrapperField(this, proto.api_proto.DefaultQuestion, 1));
};


/** @param {?proto.api_proto.DefaultQuestion|undefined} value */
proto.api_proto.FullDefaultQuestion.prototype.setQuestion = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.api_proto.FullDefaultQuestion.prototype.clearQuestion = function() {
  this.setQuestion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_proto.FullDefaultQuestion.prototype.hasQuestion = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Space space = 2;
 * @return {?proto.api_proto.Space}
 */
proto.api_proto.FullDefaultQuestion.prototype.getSpace = function() {
  return /** @type{?proto.api_proto.Space} */ (
    jspb.Message.getWrapperField(this, proto.api_proto.Space, 2));
};


/** @param {?proto.api_proto.Space|undefined} value */
proto.api_proto.FullDefaultQuestion.prototype.setSpace = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.api_proto.FullDefaultQuestion.prototype.clearSpace = function() {
  this.setSpace(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_proto.FullDefaultQuestion.prototype.hasSpace = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated Answer answers = 3;
 * @return {!Array<!proto.api_proto.Answer>}
 */
proto.api_proto.FullDefaultQuestion.prototype.getAnswersList = function() {
  return /** @type{!Array<!proto.api_proto.Answer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api_proto.Answer, 3));
};


/** @param {!Array<!proto.api_proto.Answer>} value */
proto.api_proto.FullDefaultQuestion.prototype.setAnswersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.api_proto.Answer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api_proto.Answer}
 */
proto.api_proto.FullDefaultQuestion.prototype.addAnswers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.api_proto.Answer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.api_proto.FullDefaultQuestion.prototype.clearAnswersList = function() {
  this.setAnswersList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.api_proto.AnyQuestion.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.api_proto.AnyQuestion.QuestionCase = {
  QUESTION_NOT_SET: 0,
  DEFAULT_QUESTION: 1,
  CUSTOM_QUESTION: 2
};

/**
 * @return {proto.api_proto.AnyQuestion.QuestionCase}
 */
proto.api_proto.AnyQuestion.prototype.getQuestionCase = function() {
  return /** @type {proto.api_proto.AnyQuestion.QuestionCase} */(jspb.Message.computeOneofCase(this, proto.api_proto.AnyQuestion.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.AnyQuestion.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.AnyQuestion.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.AnyQuestion} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.AnyQuestion.toObject = function(includeInstance, msg) {
  var f, obj = {
    defaultQuestion: (f = msg.getDefaultQuestion()) && proto.api_proto.DefaultQuestion.toObject(includeInstance, f),
    customQuestion: (f = msg.getCustomQuestion()) && proto.api_proto.CustomQuestion.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.AnyQuestion}
 */
proto.api_proto.AnyQuestion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.AnyQuestion;
  return proto.api_proto.AnyQuestion.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.AnyQuestion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.AnyQuestion}
 */
proto.api_proto.AnyQuestion.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_proto.DefaultQuestion;
      reader.readMessage(value,proto.api_proto.DefaultQuestion.deserializeBinaryFromReader);
      msg.setDefaultQuestion(value);
      break;
    case 2:
      var value = new proto.api_proto.CustomQuestion;
      reader.readMessage(value,proto.api_proto.CustomQuestion.deserializeBinaryFromReader);
      msg.setCustomQuestion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.AnyQuestion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.AnyQuestion.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.AnyQuestion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.AnyQuestion.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDefaultQuestion();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api_proto.DefaultQuestion.serializeBinaryToWriter
    );
  }
  f = message.getCustomQuestion();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api_proto.CustomQuestion.serializeBinaryToWriter
    );
  }
};


/**
 * optional DefaultQuestion default_question = 1;
 * @return {?proto.api_proto.DefaultQuestion}
 */
proto.api_proto.AnyQuestion.prototype.getDefaultQuestion = function() {
  return /** @type{?proto.api_proto.DefaultQuestion} */ (
    jspb.Message.getWrapperField(this, proto.api_proto.DefaultQuestion, 1));
};


/** @param {?proto.api_proto.DefaultQuestion|undefined} value */
proto.api_proto.AnyQuestion.prototype.setDefaultQuestion = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.api_proto.AnyQuestion.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.api_proto.AnyQuestion.prototype.clearDefaultQuestion = function() {
  this.setDefaultQuestion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_proto.AnyQuestion.prototype.hasDefaultQuestion = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional CustomQuestion custom_question = 2;
 * @return {?proto.api_proto.CustomQuestion}
 */
proto.api_proto.AnyQuestion.prototype.getCustomQuestion = function() {
  return /** @type{?proto.api_proto.CustomQuestion} */ (
    jspb.Message.getWrapperField(this, proto.api_proto.CustomQuestion, 2));
};


/** @param {?proto.api_proto.CustomQuestion|undefined} value */
proto.api_proto.AnyQuestion.prototype.setCustomQuestion = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.api_proto.AnyQuestion.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.api_proto.AnyQuestion.prototype.clearCustomQuestion = function() {
  this.setCustomQuestion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_proto.AnyQuestion.prototype.hasCustomQuestion = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.TransactionView.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.TransactionView.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.TransactionView} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.TransactionView.toObject = function(includeInstance, msg) {
  var f, obj = {
    other: (f = msg.getOther()) && proto.api_proto.User.toObject(includeInstance, f),
    diff: jspb.Message.getFieldWithDefault(msg, 2, 0),
    createdAt: jspb.Message.getFieldWithDefault(msg, 3, 0),
    statusUpdatedAt: jspb.Message.getFieldWithDefault(msg, 4, 0),
    status: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.TransactionView}
 */
proto.api_proto.TransactionView.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.TransactionView;
  return proto.api_proto.TransactionView.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.TransactionView} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.TransactionView}
 */
proto.api_proto.TransactionView.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_proto.User;
      reader.readMessage(value,proto.api_proto.User.deserializeBinaryFromReader);
      msg.setOther(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setDiff(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreatedAt(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setStatusUpdatedAt(value);
      break;
    case 5:
      var value = /** @type {!proto.api_proto.TransactionStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.TransactionView.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.TransactionView.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.TransactionView} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.TransactionView.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOther();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api_proto.User.serializeBinaryToWriter
    );
  }
  f = message.getDiff();
  if (f !== 0) {
    writer.writeSint32(
      2,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getStatusUpdatedAt();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
};


/**
 * optional User other = 1;
 * @return {?proto.api_proto.User}
 */
proto.api_proto.TransactionView.prototype.getOther = function() {
  return /** @type{?proto.api_proto.User} */ (
    jspb.Message.getWrapperField(this, proto.api_proto.User, 1));
};


/** @param {?proto.api_proto.User|undefined} value */
proto.api_proto.TransactionView.prototype.setOther = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.api_proto.TransactionView.prototype.clearOther = function() {
  this.setOther(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_proto.TransactionView.prototype.hasOther = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional sint32 diff = 2;
 * @return {number}
 */
proto.api_proto.TransactionView.prototype.getDiff = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.api_proto.TransactionView.prototype.setDiff = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 created_at = 3;
 * @return {number}
 */
proto.api_proto.TransactionView.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.api_proto.TransactionView.prototype.setCreatedAt = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 status_updated_at = 4;
 * @return {number}
 */
proto.api_proto.TransactionView.prototype.getStatusUpdatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.api_proto.TransactionView.prototype.setStatusUpdatedAt = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional TransactionStatus status = 5;
 * @return {!proto.api_proto.TransactionStatus}
 */
proto.api_proto.TransactionView.prototype.getStatus = function() {
  return /** @type {!proto.api_proto.TransactionStatus} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {!proto.api_proto.TransactionStatus} value */
proto.api_proto.TransactionView.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.ThankYou.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.ThankYou.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.ThankYou} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.ThankYou.toObject = function(includeInstance, msg) {
  var f, obj = {
    thanker: (f = msg.getThanker()) && proto.api_proto.Thanker.toObject(includeInstance, f),
    thankTime: jspb.Message.getFieldWithDefault(msg, 2, 0),
    answer: (f = msg.getAnswer()) && proto.api_proto.Answer.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.ThankYou}
 */
proto.api_proto.ThankYou.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.ThankYou;
  return proto.api_proto.ThankYou.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.ThankYou} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.ThankYou}
 */
proto.api_proto.ThankYou.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_proto.Thanker;
      reader.readMessage(value,proto.api_proto.Thanker.deserializeBinaryFromReader);
      msg.setThanker(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setThankTime(value);
      break;
    case 3:
      var value = new proto.api_proto.Answer;
      reader.readMessage(value,proto.api_proto.Answer.deserializeBinaryFromReader);
      msg.setAnswer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.ThankYou.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.ThankYou.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.ThankYou} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.ThankYou.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getThanker();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api_proto.Thanker.serializeBinaryToWriter
    );
  }
  f = message.getThankTime();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getAnswer();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api_proto.Answer.serializeBinaryToWriter
    );
  }
};


/**
 * optional Thanker thanker = 1;
 * @return {?proto.api_proto.Thanker}
 */
proto.api_proto.ThankYou.prototype.getThanker = function() {
  return /** @type{?proto.api_proto.Thanker} */ (
    jspb.Message.getWrapperField(this, proto.api_proto.Thanker, 1));
};


/** @param {?proto.api_proto.Thanker|undefined} value */
proto.api_proto.ThankYou.prototype.setThanker = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.api_proto.ThankYou.prototype.clearThanker = function() {
  this.setThanker(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_proto.ThankYou.prototype.hasThanker = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 thank_time = 2;
 * @return {number}
 */
proto.api_proto.ThankYou.prototype.getThankTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.api_proto.ThankYou.prototype.setThankTime = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional Answer answer = 3;
 * @return {?proto.api_proto.Answer}
 */
proto.api_proto.ThankYou.prototype.getAnswer = function() {
  return /** @type{?proto.api_proto.Answer} */ (
    jspb.Message.getWrapperField(this, proto.api_proto.Answer, 3));
};


/** @param {?proto.api_proto.Answer|undefined} value */
proto.api_proto.ThankYou.prototype.setAnswer = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.api_proto.ThankYou.prototype.clearAnswer = function() {
  this.setAnswer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_proto.ThankYou.prototype.hasAnswer = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.WaitOnDefaultQuestionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.WaitOnDefaultQuestionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.WaitOnDefaultQuestionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.WaitOnDefaultQuestionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    spaceId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    defaultQuestionId: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.WaitOnDefaultQuestionRequest}
 */
proto.api_proto.WaitOnDefaultQuestionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.WaitOnDefaultQuestionRequest;
  return proto.api_proto.WaitOnDefaultQuestionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.WaitOnDefaultQuestionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.WaitOnDefaultQuestionRequest}
 */
proto.api_proto.WaitOnDefaultQuestionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSpaceId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefaultQuestionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.WaitOnDefaultQuestionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.WaitOnDefaultQuestionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.WaitOnDefaultQuestionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.WaitOnDefaultQuestionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSpaceId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDefaultQuestionId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.api_proto.WaitOnDefaultQuestionRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.api_proto.WaitOnDefaultQuestionRequest.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string space_id = 2;
 * @return {string}
 */
proto.api_proto.WaitOnDefaultQuestionRequest.prototype.getSpaceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.api_proto.WaitOnDefaultQuestionRequest.prototype.setSpaceId = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string default_question_id = 3;
 * @return {string}
 */
proto.api_proto.WaitOnDefaultQuestionRequest.prototype.getDefaultQuestionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.api_proto.WaitOnDefaultQuestionRequest.prototype.setDefaultQuestionId = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.WaitOnDefaultQuestionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.WaitOnDefaultQuestionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.WaitOnDefaultQuestionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.WaitOnDefaultQuestionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    pointsafter: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.WaitOnDefaultQuestionResponse}
 */
proto.api_proto.WaitOnDefaultQuestionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.WaitOnDefaultQuestionResponse;
  return proto.api_proto.WaitOnDefaultQuestionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.WaitOnDefaultQuestionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.WaitOnDefaultQuestionResponse}
 */
proto.api_proto.WaitOnDefaultQuestionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setPointsafter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.WaitOnDefaultQuestionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.WaitOnDefaultQuestionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.WaitOnDefaultQuestionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.WaitOnDefaultQuestionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPointsafter();
  if (f !== 0) {
    writer.writeSint32(
      1,
      f
    );
  }
};


/**
 * optional sint32 pointsAfter = 1;
 * @return {number}
 */
proto.api_proto.WaitOnDefaultQuestionResponse.prototype.getPointsafter = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.api_proto.WaitOnDefaultQuestionResponse.prototype.setPointsafter = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.AskDefaultQuestionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.AskDefaultQuestionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.AskDefaultQuestionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.AskDefaultQuestionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.AskDefaultQuestionResponse}
 */
proto.api_proto.AskDefaultQuestionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.AskDefaultQuestionResponse;
  return proto.api_proto.AskDefaultQuestionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.AskDefaultQuestionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.AskDefaultQuestionResponse}
 */
proto.api_proto.AskDefaultQuestionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.AskDefaultQuestionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.AskDefaultQuestionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.AskDefaultQuestionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.AskDefaultQuestionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.AnswerDefaultQuestionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.AnswerDefaultQuestionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.AnswerDefaultQuestionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.AnswerDefaultQuestionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    defaultQuestionId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    spaceId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    answervalue: (f = msg.getAnswervalue()) && proto.api_proto.AnswerValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.AnswerDefaultQuestionRequest}
 */
proto.api_proto.AnswerDefaultQuestionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.AnswerDefaultQuestionRequest;
  return proto.api_proto.AnswerDefaultQuestionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.AnswerDefaultQuestionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.AnswerDefaultQuestionRequest}
 */
proto.api_proto.AnswerDefaultQuestionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefaultQuestionId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSpaceId(value);
      break;
    case 4:
      var value = new proto.api_proto.AnswerValue;
      reader.readMessage(value,proto.api_proto.AnswerValue.deserializeBinaryFromReader);
      msg.setAnswervalue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.AnswerDefaultQuestionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.AnswerDefaultQuestionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.AnswerDefaultQuestionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.AnswerDefaultQuestionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDefaultQuestionId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSpaceId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAnswervalue();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.api_proto.AnswerValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.api_proto.AnswerDefaultQuestionRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.api_proto.AnswerDefaultQuestionRequest.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string default_question_id = 2;
 * @return {string}
 */
proto.api_proto.AnswerDefaultQuestionRequest.prototype.getDefaultQuestionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.api_proto.AnswerDefaultQuestionRequest.prototype.setDefaultQuestionId = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string space_id = 3;
 * @return {string}
 */
proto.api_proto.AnswerDefaultQuestionRequest.prototype.getSpaceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.api_proto.AnswerDefaultQuestionRequest.prototype.setSpaceId = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional AnswerValue answerValue = 4;
 * @return {?proto.api_proto.AnswerValue}
 */
proto.api_proto.AnswerDefaultQuestionRequest.prototype.getAnswervalue = function() {
  return /** @type{?proto.api_proto.AnswerValue} */ (
    jspb.Message.getWrapperField(this, proto.api_proto.AnswerValue, 4));
};


/** @param {?proto.api_proto.AnswerValue|undefined} value */
proto.api_proto.AnswerDefaultQuestionRequest.prototype.setAnswervalue = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.api_proto.AnswerDefaultQuestionRequest.prototype.clearAnswervalue = function() {
  this.setAnswervalue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_proto.AnswerDefaultQuestionRequest.prototype.hasAnswervalue = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.AnswerDefaultQuestionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.AnswerDefaultQuestionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.AnswerDefaultQuestionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.AnswerDefaultQuestionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    pointsafter: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.AnswerDefaultQuestionResponse}
 */
proto.api_proto.AnswerDefaultQuestionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.AnswerDefaultQuestionResponse;
  return proto.api_proto.AnswerDefaultQuestionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.AnswerDefaultQuestionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.AnswerDefaultQuestionResponse}
 */
proto.api_proto.AnswerDefaultQuestionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setPointsafter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.AnswerDefaultQuestionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.AnswerDefaultQuestionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.AnswerDefaultQuestionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.AnswerDefaultQuestionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPointsafter();
  if (f !== 0) {
    writer.writeSint32(
      1,
      f
    );
  }
};


/**
 * optional sint32 pointsAfter = 1;
 * @return {number}
 */
proto.api_proto.AnswerDefaultQuestionResponse.prototype.getPointsafter = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.api_proto.AnswerDefaultQuestionResponse.prototype.setPointsafter = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.AskCustomQuestionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.AskCustomQuestionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.AskCustomQuestionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.AskCustomQuestionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    spaceId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    questionText: jspb.Message.getFieldWithDefault(msg, 3, ""),
    price: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.AskCustomQuestionRequest}
 */
proto.api_proto.AskCustomQuestionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.AskCustomQuestionRequest;
  return proto.api_proto.AskCustomQuestionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.AskCustomQuestionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.AskCustomQuestionRequest}
 */
proto.api_proto.AskCustomQuestionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSpaceId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestionText(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPrice(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.AskCustomQuestionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.AskCustomQuestionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.AskCustomQuestionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.AskCustomQuestionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSpaceId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getQuestionText();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.api_proto.AskCustomQuestionRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.api_proto.AskCustomQuestionRequest.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string space_id = 2;
 * @return {string}
 */
proto.api_proto.AskCustomQuestionRequest.prototype.getSpaceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.api_proto.AskCustomQuestionRequest.prototype.setSpaceId = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string question_text = 3;
 * @return {string}
 */
proto.api_proto.AskCustomQuestionRequest.prototype.getQuestionText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.api_proto.AskCustomQuestionRequest.prototype.setQuestionText = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint32 price = 4;
 * @return {number}
 */
proto.api_proto.AskCustomQuestionRequest.prototype.getPrice = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.api_proto.AskCustomQuestionRequest.prototype.setPrice = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.AskCustomQuestionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.AskCustomQuestionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.AskCustomQuestionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.AskCustomQuestionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    pointsafter: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.AskCustomQuestionResponse}
 */
proto.api_proto.AskCustomQuestionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.AskCustomQuestionResponse;
  return proto.api_proto.AskCustomQuestionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.AskCustomQuestionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.AskCustomQuestionResponse}
 */
proto.api_proto.AskCustomQuestionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setPointsafter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.AskCustomQuestionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.AskCustomQuestionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.AskCustomQuestionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.AskCustomQuestionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPointsafter();
  if (f !== 0) {
    writer.writeSint32(
      1,
      f
    );
  }
};


/**
 * optional sint32 pointsAfter = 1;
 * @return {number}
 */
proto.api_proto.AskCustomQuestionResponse.prototype.getPointsafter = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.api_proto.AskCustomQuestionResponse.prototype.setPointsafter = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.AnswerCustomQuestionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.AnswerCustomQuestionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.AnswerCustomQuestionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.AnswerCustomQuestionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    customQuestionId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    spaceId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    answer: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.AnswerCustomQuestionRequest}
 */
proto.api_proto.AnswerCustomQuestionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.AnswerCustomQuestionRequest;
  return proto.api_proto.AnswerCustomQuestionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.AnswerCustomQuestionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.AnswerCustomQuestionRequest}
 */
proto.api_proto.AnswerCustomQuestionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomQuestionId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSpaceId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAnswer(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.AnswerCustomQuestionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.AnswerCustomQuestionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.AnswerCustomQuestionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.AnswerCustomQuestionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCustomQuestionId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSpaceId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getAnswer();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.api_proto.AnswerCustomQuestionRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.api_proto.AnswerCustomQuestionRequest.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string custom_question_id = 2;
 * @return {string}
 */
proto.api_proto.AnswerCustomQuestionRequest.prototype.getCustomQuestionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.api_proto.AnswerCustomQuestionRequest.prototype.setCustomQuestionId = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string space_id = 3;
 * @return {string}
 */
proto.api_proto.AnswerCustomQuestionRequest.prototype.getSpaceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.api_proto.AnswerCustomQuestionRequest.prototype.setSpaceId = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string answer = 4;
 * @return {string}
 */
proto.api_proto.AnswerCustomQuestionRequest.prototype.getAnswer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.api_proto.AnswerCustomQuestionRequest.prototype.setAnswer = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.AnswerCustomQuestionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.AnswerCustomQuestionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.AnswerCustomQuestionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.AnswerCustomQuestionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    pointsafter: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.AnswerCustomQuestionResponse}
 */
proto.api_proto.AnswerCustomQuestionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.AnswerCustomQuestionResponse;
  return proto.api_proto.AnswerCustomQuestionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.AnswerCustomQuestionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.AnswerCustomQuestionResponse}
 */
proto.api_proto.AnswerCustomQuestionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setPointsafter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.AnswerCustomQuestionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.AnswerCustomQuestionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.AnswerCustomQuestionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.AnswerCustomQuestionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPointsafter();
  if (f !== 0) {
    writer.writeSint32(
      1,
      f
    );
  }
};


/**
 * optional sint32 pointsAfter = 1;
 * @return {number}
 */
proto.api_proto.AnswerCustomQuestionResponse.prototype.getPointsafter = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.api_proto.AnswerCustomQuestionResponse.prototype.setPointsafter = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.ThankAnswerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.ThankAnswerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.ThankAnswerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.ThankAnswerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    answerId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.ThankAnswerRequest}
 */
proto.api_proto.ThankAnswerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.ThankAnswerRequest;
  return proto.api_proto.ThankAnswerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.ThankAnswerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.ThankAnswerRequest}
 */
proto.api_proto.ThankAnswerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAnswerId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.ThankAnswerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.ThankAnswerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.ThankAnswerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.ThankAnswerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAnswerId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.api_proto.ThankAnswerRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.api_proto.ThankAnswerRequest.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string answer_id = 2;
 * @return {string}
 */
proto.api_proto.ThankAnswerRequest.prototype.getAnswerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.api_proto.ThankAnswerRequest.prototype.setAnswerId = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.ReportAnswerRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.ReportAnswerRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.ReportAnswerRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.ReportAnswerRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    answerId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    reason: jspb.Message.getFieldWithDefault(msg, 3, ""),
    evidenceImgUrl: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.ReportAnswerRequest}
 */
proto.api_proto.ReportAnswerRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.ReportAnswerRequest;
  return proto.api_proto.ReportAnswerRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.ReportAnswerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.ReportAnswerRequest}
 */
proto.api_proto.ReportAnswerRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAnswerId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setReason(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEvidenceImgUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.ReportAnswerRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.ReportAnswerRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.ReportAnswerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.ReportAnswerRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAnswerId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getReason();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEvidenceImgUrl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.api_proto.ReportAnswerRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.api_proto.ReportAnswerRequest.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string answer_id = 2;
 * @return {string}
 */
proto.api_proto.ReportAnswerRequest.prototype.getAnswerId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.api_proto.ReportAnswerRequest.prototype.setAnswerId = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string reason = 3;
 * @return {string}
 */
proto.api_proto.ReportAnswerRequest.prototype.getReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.api_proto.ReportAnswerRequest.prototype.setReason = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string evidence_img_url = 4;
 * @return {string}
 */
proto.api_proto.ReportAnswerRequest.prototype.getEvidenceImgUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.api_proto.ReportAnswerRequest.prototype.setEvidenceImgUrl = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.AuthViewCreateIfNoUserRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.AuthViewCreateIfNoUserRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.AuthViewCreateIfNoUserRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.AuthViewCreateIfNoUserRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    email: jspb.Message.getFieldWithDefault(msg, 2, ""),
    photoUrl: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.AuthViewCreateIfNoUserRequest}
 */
proto.api_proto.AuthViewCreateIfNoUserRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.AuthViewCreateIfNoUserRequest;
  return proto.api_proto.AuthViewCreateIfNoUserRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.AuthViewCreateIfNoUserRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.AuthViewCreateIfNoUserRequest}
 */
proto.api_proto.AuthViewCreateIfNoUserRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhotoUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.AuthViewCreateIfNoUserRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.AuthViewCreateIfNoUserRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.AuthViewCreateIfNoUserRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.AuthViewCreateIfNoUserRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPhotoUrl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.api_proto.AuthViewCreateIfNoUserRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.api_proto.AuthViewCreateIfNoUserRequest.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string email = 2;
 * @return {string}
 */
proto.api_proto.AuthViewCreateIfNoUserRequest.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.api_proto.AuthViewCreateIfNoUserRequest.prototype.setEmail = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string photo_url = 3;
 * @return {string}
 */
proto.api_proto.AuthViewCreateIfNoUserRequest.prototype.getPhotoUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.api_proto.AuthViewCreateIfNoUserRequest.prototype.setPhotoUrl = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.AuthViewCreateIfNoUserResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.AuthViewCreateIfNoUserResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.AuthViewCreateIfNoUserResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.AuthViewCreateIfNoUserResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    user: (f = msg.getUser()) && proto.api_proto.User.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.AuthViewCreateIfNoUserResponse}
 */
proto.api_proto.AuthViewCreateIfNoUserResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.AuthViewCreateIfNoUserResponse;
  return proto.api_proto.AuthViewCreateIfNoUserResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.AuthViewCreateIfNoUserResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.AuthViewCreateIfNoUserResponse}
 */
proto.api_proto.AuthViewCreateIfNoUserResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_proto.User;
      reader.readMessage(value,proto.api_proto.User.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.AuthViewCreateIfNoUserResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.AuthViewCreateIfNoUserResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.AuthViewCreateIfNoUserResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.AuthViewCreateIfNoUserResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api_proto.User.serializeBinaryToWriter
    );
  }
};


/**
 * optional User user = 1;
 * @return {?proto.api_proto.User}
 */
proto.api_proto.AuthViewCreateIfNoUserResponse.prototype.getUser = function() {
  return /** @type{?proto.api_proto.User} */ (
    jspb.Message.getWrapperField(this, proto.api_proto.User, 1));
};


/** @param {?proto.api_proto.User|undefined} value */
proto.api_proto.AuthViewCreateIfNoUserResponse.prototype.setUser = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.api_proto.AuthViewCreateIfNoUserResponse.prototype.clearUser = function() {
  this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_proto.AuthViewCreateIfNoUserResponse.prototype.hasUser = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api_proto.NotificationAnswer.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.NotificationAnswer.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.NotificationAnswer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.NotificationAnswer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.NotificationAnswer.toObject = function(includeInstance, msg) {
  var f, obj = {
    question: (f = msg.getQuestion()) && proto.api_proto.AnyQuestion.toObject(includeInstance, f),
    answerList: jspb.Message.toObjectList(msg.getAnswerList(),
    proto.api_proto.Answer.toObject, includeInstance),
    space: (f = msg.getSpace()) && proto.api_proto.Space.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.NotificationAnswer}
 */
proto.api_proto.NotificationAnswer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.NotificationAnswer;
  return proto.api_proto.NotificationAnswer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.NotificationAnswer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.NotificationAnswer}
 */
proto.api_proto.NotificationAnswer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_proto.AnyQuestion;
      reader.readMessage(value,proto.api_proto.AnyQuestion.deserializeBinaryFromReader);
      msg.setQuestion(value);
      break;
    case 2:
      var value = new proto.api_proto.Answer;
      reader.readMessage(value,proto.api_proto.Answer.deserializeBinaryFromReader);
      msg.addAnswer(value);
      break;
    case 3:
      var value = new proto.api_proto.Space;
      reader.readMessage(value,proto.api_proto.Space.deserializeBinaryFromReader);
      msg.setSpace(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.NotificationAnswer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.NotificationAnswer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.NotificationAnswer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.NotificationAnswer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuestion();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api_proto.AnyQuestion.serializeBinaryToWriter
    );
  }
  f = message.getAnswerList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.api_proto.Answer.serializeBinaryToWriter
    );
  }
  f = message.getSpace();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api_proto.Space.serializeBinaryToWriter
    );
  }
};


/**
 * optional AnyQuestion question = 1;
 * @return {?proto.api_proto.AnyQuestion}
 */
proto.api_proto.NotificationAnswer.prototype.getQuestion = function() {
  return /** @type{?proto.api_proto.AnyQuestion} */ (
    jspb.Message.getWrapperField(this, proto.api_proto.AnyQuestion, 1));
};


/** @param {?proto.api_proto.AnyQuestion|undefined} value */
proto.api_proto.NotificationAnswer.prototype.setQuestion = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.api_proto.NotificationAnswer.prototype.clearQuestion = function() {
  this.setQuestion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_proto.NotificationAnswer.prototype.hasQuestion = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Answer answer = 2;
 * @return {!Array<!proto.api_proto.Answer>}
 */
proto.api_proto.NotificationAnswer.prototype.getAnswerList = function() {
  return /** @type{!Array<!proto.api_proto.Answer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api_proto.Answer, 2));
};


/** @param {!Array<!proto.api_proto.Answer>} value */
proto.api_proto.NotificationAnswer.prototype.setAnswerList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.api_proto.Answer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api_proto.Answer}
 */
proto.api_proto.NotificationAnswer.prototype.addAnswer = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.api_proto.Answer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.api_proto.NotificationAnswer.prototype.clearAnswerList = function() {
  this.setAnswerList([]);
};


/**
 * optional Space space = 3;
 * @return {?proto.api_proto.Space}
 */
proto.api_proto.NotificationAnswer.prototype.getSpace = function() {
  return /** @type{?proto.api_proto.Space} */ (
    jspb.Message.getWrapperField(this, proto.api_proto.Space, 3));
};


/** @param {?proto.api_proto.Space|undefined} value */
proto.api_proto.NotificationAnswer.prototype.setSpace = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.api_proto.NotificationAnswer.prototype.clearSpace = function() {
  this.setSpace(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_proto.NotificationAnswer.prototype.hasSpace = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.NotificationGetNotificationsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.NotificationGetNotificationsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.NotificationGetNotificationsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.NotificationGetNotificationsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    coordinates: (f = msg.getCoordinates()) && proto.api_proto.Coordinates.toObject(includeInstance, f),
    distanceLimit: +jspb.Message.getFieldWithDefault(msg, 3, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.NotificationGetNotificationsRequest}
 */
proto.api_proto.NotificationGetNotificationsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.NotificationGetNotificationsRequest;
  return proto.api_proto.NotificationGetNotificationsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.NotificationGetNotificationsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.NotificationGetNotificationsRequest}
 */
proto.api_proto.NotificationGetNotificationsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = new proto.api_proto.Coordinates;
      reader.readMessage(value,proto.api_proto.Coordinates.deserializeBinaryFromReader);
      msg.setCoordinates(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDistanceLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.NotificationGetNotificationsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.NotificationGetNotificationsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.NotificationGetNotificationsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.NotificationGetNotificationsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCoordinates();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api_proto.Coordinates.serializeBinaryToWriter
    );
  }
  f = message.getDistanceLimit();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.api_proto.NotificationGetNotificationsRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.api_proto.NotificationGetNotificationsRequest.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Coordinates coordinates = 2;
 * @return {?proto.api_proto.Coordinates}
 */
proto.api_proto.NotificationGetNotificationsRequest.prototype.getCoordinates = function() {
  return /** @type{?proto.api_proto.Coordinates} */ (
    jspb.Message.getWrapperField(this, proto.api_proto.Coordinates, 2));
};


/** @param {?proto.api_proto.Coordinates|undefined} value */
proto.api_proto.NotificationGetNotificationsRequest.prototype.setCoordinates = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.api_proto.NotificationGetNotificationsRequest.prototype.clearCoordinates = function() {
  this.setCoordinates(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_proto.NotificationGetNotificationsRequest.prototype.hasCoordinates = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double distance_limit = 3;
 * @return {number}
 */
proto.api_proto.NotificationGetNotificationsRequest.prototype.getDistanceLimit = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.api_proto.NotificationGetNotificationsRequest.prototype.setDistanceLimit = function(value) {
  jspb.Message.setProto3FloatField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api_proto.NotificationGetNotificationsResponse.repeatedFields_ = [1,2,3,4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.NotificationGetNotificationsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.NotificationGetNotificationsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.NotificationGetNotificationsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.NotificationGetNotificationsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    defaultQuestionsList: jspb.Message.toObjectList(msg.getDefaultQuestionsList(),
    proto.api_proto.FullDefaultQuestion.toObject, includeInstance),
    customQuestionsList: jspb.Message.toObjectList(msg.getCustomQuestionsList(),
    proto.api_proto.FullCustomQuestion.toObject, includeInstance),
    answersList: jspb.Message.toObjectList(msg.getAnswersList(),
    proto.api_proto.NotificationAnswer.toObject, includeInstance),
    transactionsList: jspb.Message.toObjectList(msg.getTransactionsList(),
    proto.api_proto.TransactionView.toObject, includeInstance),
    thanksList: jspb.Message.toObjectList(msg.getThanksList(),
    proto.api_proto.ThankYou.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.NotificationGetNotificationsResponse}
 */
proto.api_proto.NotificationGetNotificationsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.NotificationGetNotificationsResponse;
  return proto.api_proto.NotificationGetNotificationsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.NotificationGetNotificationsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.NotificationGetNotificationsResponse}
 */
proto.api_proto.NotificationGetNotificationsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_proto.FullDefaultQuestion;
      reader.readMessage(value,proto.api_proto.FullDefaultQuestion.deserializeBinaryFromReader);
      msg.addDefaultQuestions(value);
      break;
    case 2:
      var value = new proto.api_proto.FullCustomQuestion;
      reader.readMessage(value,proto.api_proto.FullCustomQuestion.deserializeBinaryFromReader);
      msg.addCustomQuestions(value);
      break;
    case 3:
      var value = new proto.api_proto.NotificationAnswer;
      reader.readMessage(value,proto.api_proto.NotificationAnswer.deserializeBinaryFromReader);
      msg.addAnswers(value);
      break;
    case 4:
      var value = new proto.api_proto.TransactionView;
      reader.readMessage(value,proto.api_proto.TransactionView.deserializeBinaryFromReader);
      msg.addTransactions(value);
      break;
    case 5:
      var value = new proto.api_proto.ThankYou;
      reader.readMessage(value,proto.api_proto.ThankYou.deserializeBinaryFromReader);
      msg.addThanks(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.NotificationGetNotificationsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.NotificationGetNotificationsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.NotificationGetNotificationsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.NotificationGetNotificationsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDefaultQuestionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.api_proto.FullDefaultQuestion.serializeBinaryToWriter
    );
  }
  f = message.getCustomQuestionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.api_proto.FullCustomQuestion.serializeBinaryToWriter
    );
  }
  f = message.getAnswersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.api_proto.NotificationAnswer.serializeBinaryToWriter
    );
  }
  f = message.getTransactionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.api_proto.TransactionView.serializeBinaryToWriter
    );
  }
  f = message.getThanksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.api_proto.ThankYou.serializeBinaryToWriter
    );
  }
};


/**
 * repeated FullDefaultQuestion default_questions = 1;
 * @return {!Array<!proto.api_proto.FullDefaultQuestion>}
 */
proto.api_proto.NotificationGetNotificationsResponse.prototype.getDefaultQuestionsList = function() {
  return /** @type{!Array<!proto.api_proto.FullDefaultQuestion>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api_proto.FullDefaultQuestion, 1));
};


/** @param {!Array<!proto.api_proto.FullDefaultQuestion>} value */
proto.api_proto.NotificationGetNotificationsResponse.prototype.setDefaultQuestionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api_proto.FullDefaultQuestion=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api_proto.FullDefaultQuestion}
 */
proto.api_proto.NotificationGetNotificationsResponse.prototype.addDefaultQuestions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api_proto.FullDefaultQuestion, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.api_proto.NotificationGetNotificationsResponse.prototype.clearDefaultQuestionsList = function() {
  this.setDefaultQuestionsList([]);
};


/**
 * repeated FullCustomQuestion custom_questions = 2;
 * @return {!Array<!proto.api_proto.FullCustomQuestion>}
 */
proto.api_proto.NotificationGetNotificationsResponse.prototype.getCustomQuestionsList = function() {
  return /** @type{!Array<!proto.api_proto.FullCustomQuestion>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api_proto.FullCustomQuestion, 2));
};


/** @param {!Array<!proto.api_proto.FullCustomQuestion>} value */
proto.api_proto.NotificationGetNotificationsResponse.prototype.setCustomQuestionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.api_proto.FullCustomQuestion=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api_proto.FullCustomQuestion}
 */
proto.api_proto.NotificationGetNotificationsResponse.prototype.addCustomQuestions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.api_proto.FullCustomQuestion, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.api_proto.NotificationGetNotificationsResponse.prototype.clearCustomQuestionsList = function() {
  this.setCustomQuestionsList([]);
};


/**
 * repeated NotificationAnswer answers = 3;
 * @return {!Array<!proto.api_proto.NotificationAnswer>}
 */
proto.api_proto.NotificationGetNotificationsResponse.prototype.getAnswersList = function() {
  return /** @type{!Array<!proto.api_proto.NotificationAnswer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api_proto.NotificationAnswer, 3));
};


/** @param {!Array<!proto.api_proto.NotificationAnswer>} value */
proto.api_proto.NotificationGetNotificationsResponse.prototype.setAnswersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.api_proto.NotificationAnswer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api_proto.NotificationAnswer}
 */
proto.api_proto.NotificationGetNotificationsResponse.prototype.addAnswers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.api_proto.NotificationAnswer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.api_proto.NotificationGetNotificationsResponse.prototype.clearAnswersList = function() {
  this.setAnswersList([]);
};


/**
 * repeated TransactionView transactions = 4;
 * @return {!Array<!proto.api_proto.TransactionView>}
 */
proto.api_proto.NotificationGetNotificationsResponse.prototype.getTransactionsList = function() {
  return /** @type{!Array<!proto.api_proto.TransactionView>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api_proto.TransactionView, 4));
};


/** @param {!Array<!proto.api_proto.TransactionView>} value */
proto.api_proto.NotificationGetNotificationsResponse.prototype.setTransactionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.api_proto.TransactionView=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api_proto.TransactionView}
 */
proto.api_proto.NotificationGetNotificationsResponse.prototype.addTransactions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.api_proto.TransactionView, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.api_proto.NotificationGetNotificationsResponse.prototype.clearTransactionsList = function() {
  this.setTransactionsList([]);
};


/**
 * repeated ThankYou thanks = 5;
 * @return {!Array<!proto.api_proto.ThankYou>}
 */
proto.api_proto.NotificationGetNotificationsResponse.prototype.getThanksList = function() {
  return /** @type{!Array<!proto.api_proto.ThankYou>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api_proto.ThankYou, 5));
};


/** @param {!Array<!proto.api_proto.ThankYou>} value */
proto.api_proto.NotificationGetNotificationsResponse.prototype.setThanksList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.api_proto.ThankYou=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api_proto.ThankYou}
 */
proto.api_proto.NotificationGetNotificationsResponse.prototype.addThanks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.api_proto.ThankYou, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.api_proto.NotificationGetNotificationsResponse.prototype.clearThanksList = function() {
  this.setThanksList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.LandingViewFinishOnboardingRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.LandingViewFinishOnboardingRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.LandingViewFinishOnboardingRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.LandingViewFinishOnboardingRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    firstName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    lastName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    photoUrl: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.LandingViewFinishOnboardingRequest}
 */
proto.api_proto.LandingViewFinishOnboardingRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.LandingViewFinishOnboardingRequest;
  return proto.api_proto.LandingViewFinishOnboardingRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.LandingViewFinishOnboardingRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.LandingViewFinishOnboardingRequest}
 */
proto.api_proto.LandingViewFinishOnboardingRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhotoUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.LandingViewFinishOnboardingRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.LandingViewFinishOnboardingRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.LandingViewFinishOnboardingRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.LandingViewFinishOnboardingRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFirstName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLastName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPhotoUrl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.api_proto.LandingViewFinishOnboardingRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.api_proto.LandingViewFinishOnboardingRequest.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string first_name = 2;
 * @return {string}
 */
proto.api_proto.LandingViewFinishOnboardingRequest.prototype.getFirstName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.api_proto.LandingViewFinishOnboardingRequest.prototype.setFirstName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string last_name = 3;
 * @return {string}
 */
proto.api_proto.LandingViewFinishOnboardingRequest.prototype.getLastName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.api_proto.LandingViewFinishOnboardingRequest.prototype.setLastName = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string photo_url = 4;
 * @return {string}
 */
proto.api_proto.LandingViewFinishOnboardingRequest.prototype.getPhotoUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.api_proto.LandingViewFinishOnboardingRequest.prototype.setPhotoUrl = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.LandingViewFinishOnboardingResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.LandingViewFinishOnboardingResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.LandingViewFinishOnboardingResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.LandingViewFinishOnboardingResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    user: (f = msg.getUser()) && proto.api_proto.User.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.LandingViewFinishOnboardingResponse}
 */
proto.api_proto.LandingViewFinishOnboardingResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.LandingViewFinishOnboardingResponse;
  return proto.api_proto.LandingViewFinishOnboardingResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.LandingViewFinishOnboardingResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.LandingViewFinishOnboardingResponse}
 */
proto.api_proto.LandingViewFinishOnboardingResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_proto.User;
      reader.readMessage(value,proto.api_proto.User.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.LandingViewFinishOnboardingResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.LandingViewFinishOnboardingResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.LandingViewFinishOnboardingResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.LandingViewFinishOnboardingResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api_proto.User.serializeBinaryToWriter
    );
  }
};


/**
 * optional User user = 1;
 * @return {?proto.api_proto.User}
 */
proto.api_proto.LandingViewFinishOnboardingResponse.prototype.getUser = function() {
  return /** @type{?proto.api_proto.User} */ (
    jspb.Message.getWrapperField(this, proto.api_proto.User, 1));
};


/** @param {?proto.api_proto.User|undefined} value */
proto.api_proto.LandingViewFinishOnboardingResponse.prototype.setUser = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.api_proto.LandingViewFinishOnboardingResponse.prototype.clearUser = function() {
  this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_proto.LandingViewFinishOnboardingResponse.prototype.hasUser = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.api_proto.ProfileViewQuestion.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.api_proto.ProfileViewQuestion.QuestionCase = {
  QUESTION_NOT_SET: 0,
  CUSTOM_QUESTION: 1,
  DEFAULT_QUESTION: 2
};

/**
 * @return {proto.api_proto.ProfileViewQuestion.QuestionCase}
 */
proto.api_proto.ProfileViewQuestion.prototype.getQuestionCase = function() {
  return /** @type {proto.api_proto.ProfileViewQuestion.QuestionCase} */(jspb.Message.computeOneofCase(this, proto.api_proto.ProfileViewQuestion.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.ProfileViewQuestion.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.ProfileViewQuestion.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.ProfileViewQuestion} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.ProfileViewQuestion.toObject = function(includeInstance, msg) {
  var f, obj = {
    customQuestion: (f = msg.getCustomQuestion()) && proto.api_proto.FullCustomQuestion.toObject(includeInstance, f),
    defaultQuestion: (f = msg.getDefaultQuestion()) && proto.api_proto.FullDefaultQuestion.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.ProfileViewQuestion}
 */
proto.api_proto.ProfileViewQuestion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.ProfileViewQuestion;
  return proto.api_proto.ProfileViewQuestion.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.ProfileViewQuestion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.ProfileViewQuestion}
 */
proto.api_proto.ProfileViewQuestion.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_proto.FullCustomQuestion;
      reader.readMessage(value,proto.api_proto.FullCustomQuestion.deserializeBinaryFromReader);
      msg.setCustomQuestion(value);
      break;
    case 2:
      var value = new proto.api_proto.FullDefaultQuestion;
      reader.readMessage(value,proto.api_proto.FullDefaultQuestion.deserializeBinaryFromReader);
      msg.setDefaultQuestion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.ProfileViewQuestion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.ProfileViewQuestion.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.ProfileViewQuestion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.ProfileViewQuestion.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomQuestion();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api_proto.FullCustomQuestion.serializeBinaryToWriter
    );
  }
  f = message.getDefaultQuestion();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api_proto.FullDefaultQuestion.serializeBinaryToWriter
    );
  }
};


/**
 * optional FullCustomQuestion custom_question = 1;
 * @return {?proto.api_proto.FullCustomQuestion}
 */
proto.api_proto.ProfileViewQuestion.prototype.getCustomQuestion = function() {
  return /** @type{?proto.api_proto.FullCustomQuestion} */ (
    jspb.Message.getWrapperField(this, proto.api_proto.FullCustomQuestion, 1));
};


/** @param {?proto.api_proto.FullCustomQuestion|undefined} value */
proto.api_proto.ProfileViewQuestion.prototype.setCustomQuestion = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.api_proto.ProfileViewQuestion.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.api_proto.ProfileViewQuestion.prototype.clearCustomQuestion = function() {
  this.setCustomQuestion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_proto.ProfileViewQuestion.prototype.hasCustomQuestion = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional FullDefaultQuestion default_question = 2;
 * @return {?proto.api_proto.FullDefaultQuestion}
 */
proto.api_proto.ProfileViewQuestion.prototype.getDefaultQuestion = function() {
  return /** @type{?proto.api_proto.FullDefaultQuestion} */ (
    jspb.Message.getWrapperField(this, proto.api_proto.FullDefaultQuestion, 2));
};


/** @param {?proto.api_proto.FullDefaultQuestion|undefined} value */
proto.api_proto.ProfileViewQuestion.prototype.setDefaultQuestion = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.api_proto.ProfileViewQuestion.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.api_proto.ProfileViewQuestion.prototype.clearDefaultQuestion = function() {
  this.setDefaultQuestion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_proto.ProfileViewQuestion.prototype.hasDefaultQuestion = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.ProfileViewGetUserRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.ProfileViewGetUserRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.ProfileViewGetUserRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.ProfileViewGetUserRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    uid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.ProfileViewGetUserRequest}
 */
proto.api_proto.ProfileViewGetUserRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.ProfileViewGetUserRequest;
  return proto.api_proto.ProfileViewGetUserRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.ProfileViewGetUserRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.ProfileViewGetUserRequest}
 */
proto.api_proto.ProfileViewGetUserRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.ProfileViewGetUserRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.ProfileViewGetUserRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.ProfileViewGetUserRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.ProfileViewGetUserRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string uid = 1;
 * @return {string}
 */
proto.api_proto.ProfileViewGetUserRequest.prototype.getUid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.api_proto.ProfileViewGetUserRequest.prototype.setUid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api_proto.ProfileViewGetUserResponse.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.ProfileViewGetUserResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.ProfileViewGetUserResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.ProfileViewGetUserResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.ProfileViewGetUserResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    user: (f = msg.getUser()) && proto.api_proto.User.toObject(includeInstance, f),
    askedQuestionsList: jspb.Message.toObjectList(msg.getAskedQuestionsList(),
    proto.api_proto.ProfileViewQuestion.toObject, includeInstance),
    transactionsList: jspb.Message.toObjectList(msg.getTransactionsList(),
    proto.api_proto.TransactionView.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.ProfileViewGetUserResponse}
 */
proto.api_proto.ProfileViewGetUserResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.ProfileViewGetUserResponse;
  return proto.api_proto.ProfileViewGetUserResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.ProfileViewGetUserResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.ProfileViewGetUserResponse}
 */
proto.api_proto.ProfileViewGetUserResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_proto.User;
      reader.readMessage(value,proto.api_proto.User.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    case 2:
      var value = new proto.api_proto.ProfileViewQuestion;
      reader.readMessage(value,proto.api_proto.ProfileViewQuestion.deserializeBinaryFromReader);
      msg.addAskedQuestions(value);
      break;
    case 3:
      var value = new proto.api_proto.TransactionView;
      reader.readMessage(value,proto.api_proto.TransactionView.deserializeBinaryFromReader);
      msg.addTransactions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.ProfileViewGetUserResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.ProfileViewGetUserResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.ProfileViewGetUserResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.ProfileViewGetUserResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api_proto.User.serializeBinaryToWriter
    );
  }
  f = message.getAskedQuestionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.api_proto.ProfileViewQuestion.serializeBinaryToWriter
    );
  }
  f = message.getTransactionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.api_proto.TransactionView.serializeBinaryToWriter
    );
  }
};


/**
 * optional User user = 1;
 * @return {?proto.api_proto.User}
 */
proto.api_proto.ProfileViewGetUserResponse.prototype.getUser = function() {
  return /** @type{?proto.api_proto.User} */ (
    jspb.Message.getWrapperField(this, proto.api_proto.User, 1));
};


/** @param {?proto.api_proto.User|undefined} value */
proto.api_proto.ProfileViewGetUserResponse.prototype.setUser = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.api_proto.ProfileViewGetUserResponse.prototype.clearUser = function() {
  this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_proto.ProfileViewGetUserResponse.prototype.hasUser = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated ProfileViewQuestion asked_questions = 2;
 * @return {!Array<!proto.api_proto.ProfileViewQuestion>}
 */
proto.api_proto.ProfileViewGetUserResponse.prototype.getAskedQuestionsList = function() {
  return /** @type{!Array<!proto.api_proto.ProfileViewQuestion>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api_proto.ProfileViewQuestion, 2));
};


/** @param {!Array<!proto.api_proto.ProfileViewQuestion>} value */
proto.api_proto.ProfileViewGetUserResponse.prototype.setAskedQuestionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.api_proto.ProfileViewQuestion=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api_proto.ProfileViewQuestion}
 */
proto.api_proto.ProfileViewGetUserResponse.prototype.addAskedQuestions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.api_proto.ProfileViewQuestion, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.api_proto.ProfileViewGetUserResponse.prototype.clearAskedQuestionsList = function() {
  this.setAskedQuestionsList([]);
};


/**
 * repeated TransactionView transactions = 3;
 * @return {!Array<!proto.api_proto.TransactionView>}
 */
proto.api_proto.ProfileViewGetUserResponse.prototype.getTransactionsList = function() {
  return /** @type{!Array<!proto.api_proto.TransactionView>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api_proto.TransactionView, 3));
};


/** @param {!Array<!proto.api_proto.TransactionView>} value */
proto.api_proto.ProfileViewGetUserResponse.prototype.setTransactionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.api_proto.TransactionView=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api_proto.TransactionView}
 */
proto.api_proto.ProfileViewGetUserResponse.prototype.addTransactions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.api_proto.TransactionView, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.api_proto.ProfileViewGetUserResponse.prototype.clearTransactionsList = function() {
  this.setTransactionsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api_proto.ProfileViewGetAllUsersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.ProfileViewGetAllUsersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.ProfileViewGetAllUsersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.ProfileViewGetAllUsersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.ProfileViewGetAllUsersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    usersList: jspb.Message.toObjectList(msg.getUsersList(),
    proto.api_proto.ProfileViewGetUserResponse.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.ProfileViewGetAllUsersResponse}
 */
proto.api_proto.ProfileViewGetAllUsersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.ProfileViewGetAllUsersResponse;
  return proto.api_proto.ProfileViewGetAllUsersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.ProfileViewGetAllUsersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.ProfileViewGetAllUsersResponse}
 */
proto.api_proto.ProfileViewGetAllUsersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_proto.ProfileViewGetUserResponse;
      reader.readMessage(value,proto.api_proto.ProfileViewGetUserResponse.deserializeBinaryFromReader);
      msg.addUsers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.ProfileViewGetAllUsersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.ProfileViewGetAllUsersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.ProfileViewGetAllUsersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.ProfileViewGetAllUsersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.api_proto.ProfileViewGetUserResponse.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ProfileViewGetUserResponse users = 1;
 * @return {!Array<!proto.api_proto.ProfileViewGetUserResponse>}
 */
proto.api_proto.ProfileViewGetAllUsersResponse.prototype.getUsersList = function() {
  return /** @type{!Array<!proto.api_proto.ProfileViewGetUserResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api_proto.ProfileViewGetUserResponse, 1));
};


/** @param {!Array<!proto.api_proto.ProfileViewGetUserResponse>} value */
proto.api_proto.ProfileViewGetAllUsersResponse.prototype.setUsersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api_proto.ProfileViewGetUserResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api_proto.ProfileViewGetUserResponse}
 */
proto.api_proto.ProfileViewGetAllUsersResponse.prototype.addUsers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api_proto.ProfileViewGetUserResponse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.api_proto.ProfileViewGetAllUsersResponse.prototype.clearUsersList = function() {
  this.setUsersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.AskSpaceViewGetDefaultQuestionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.AskSpaceViewGetDefaultQuestionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.AskSpaceViewGetDefaultQuestionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.AskSpaceViewGetDefaultQuestionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    spaceId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.AskSpaceViewGetDefaultQuestionRequest}
 */
proto.api_proto.AskSpaceViewGetDefaultQuestionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.AskSpaceViewGetDefaultQuestionRequest;
  return proto.api_proto.AskSpaceViewGetDefaultQuestionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.AskSpaceViewGetDefaultQuestionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.AskSpaceViewGetDefaultQuestionRequest}
 */
proto.api_proto.AskSpaceViewGetDefaultQuestionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSpaceId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.AskSpaceViewGetDefaultQuestionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.AskSpaceViewGetDefaultQuestionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.AskSpaceViewGetDefaultQuestionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.AskSpaceViewGetDefaultQuestionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSpaceId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string space_id = 1;
 * @return {string}
 */
proto.api_proto.AskSpaceViewGetDefaultQuestionRequest.prototype.getSpaceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.api_proto.AskSpaceViewGetDefaultQuestionRequest.prototype.setSpaceId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.AskSpaceViewGetDefaultQuestionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.AskSpaceViewGetDefaultQuestionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.AskSpaceViewGetDefaultQuestionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.AskSpaceViewGetDefaultQuestionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    question: (f = msg.getQuestion()) && proto.api_proto.DefaultQuestion.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.AskSpaceViewGetDefaultQuestionResponse}
 */
proto.api_proto.AskSpaceViewGetDefaultQuestionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.AskSpaceViewGetDefaultQuestionResponse;
  return proto.api_proto.AskSpaceViewGetDefaultQuestionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.AskSpaceViewGetDefaultQuestionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.AskSpaceViewGetDefaultQuestionResponse}
 */
proto.api_proto.AskSpaceViewGetDefaultQuestionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_proto.DefaultQuestion;
      reader.readMessage(value,proto.api_proto.DefaultQuestion.deserializeBinaryFromReader);
      msg.setQuestion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.AskSpaceViewGetDefaultQuestionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.AskSpaceViewGetDefaultQuestionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.AskSpaceViewGetDefaultQuestionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.AskSpaceViewGetDefaultQuestionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuestion();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api_proto.DefaultQuestion.serializeBinaryToWriter
    );
  }
};


/**
 * optional DefaultQuestion question = 1;
 * @return {?proto.api_proto.DefaultQuestion}
 */
proto.api_proto.AskSpaceViewGetDefaultQuestionResponse.prototype.getQuestion = function() {
  return /** @type{?proto.api_proto.DefaultQuestion} */ (
    jspb.Message.getWrapperField(this, proto.api_proto.DefaultQuestion, 1));
};


/** @param {?proto.api_proto.DefaultQuestion|undefined} value */
proto.api_proto.AskSpaceViewGetDefaultQuestionResponse.prototype.setQuestion = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.api_proto.AskSpaceViewGetDefaultQuestionResponse.prototype.clearQuestion = function() {
  this.setQuestion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_proto.AskSpaceViewGetDefaultQuestionResponse.prototype.hasQuestion = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.AskSpaceViewGetCustomQuestionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.AskSpaceViewGetCustomQuestionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.AskSpaceViewGetCustomQuestionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.AskSpaceViewGetCustomQuestionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    spaceId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.AskSpaceViewGetCustomQuestionsRequest}
 */
proto.api_proto.AskSpaceViewGetCustomQuestionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.AskSpaceViewGetCustomQuestionsRequest;
  return proto.api_proto.AskSpaceViewGetCustomQuestionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.AskSpaceViewGetCustomQuestionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.AskSpaceViewGetCustomQuestionsRequest}
 */
proto.api_proto.AskSpaceViewGetCustomQuestionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSpaceId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.AskSpaceViewGetCustomQuestionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.AskSpaceViewGetCustomQuestionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.AskSpaceViewGetCustomQuestionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.AskSpaceViewGetCustomQuestionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSpaceId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string space_id = 1;
 * @return {string}
 */
proto.api_proto.AskSpaceViewGetCustomQuestionsRequest.prototype.getSpaceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.api_proto.AskSpaceViewGetCustomQuestionsRequest.prototype.setSpaceId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api_proto.AskSpaceViewGetCustomQuestionsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.AskSpaceViewGetCustomQuestionsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.AskSpaceViewGetCustomQuestionsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.AskSpaceViewGetCustomQuestionsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.AskSpaceViewGetCustomQuestionsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    questionsList: jspb.Message.toObjectList(msg.getQuestionsList(),
    proto.api_proto.CustomQuestion.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.AskSpaceViewGetCustomQuestionsResponse}
 */
proto.api_proto.AskSpaceViewGetCustomQuestionsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.AskSpaceViewGetCustomQuestionsResponse;
  return proto.api_proto.AskSpaceViewGetCustomQuestionsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.AskSpaceViewGetCustomQuestionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.AskSpaceViewGetCustomQuestionsResponse}
 */
proto.api_proto.AskSpaceViewGetCustomQuestionsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_proto.CustomQuestion;
      reader.readMessage(value,proto.api_proto.CustomQuestion.deserializeBinaryFromReader);
      msg.addQuestions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.AskSpaceViewGetCustomQuestionsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.AskSpaceViewGetCustomQuestionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.AskSpaceViewGetCustomQuestionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.AskSpaceViewGetCustomQuestionsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuestionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.api_proto.CustomQuestion.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CustomQuestion questions = 1;
 * @return {!Array<!proto.api_proto.CustomQuestion>}
 */
proto.api_proto.AskSpaceViewGetCustomQuestionsResponse.prototype.getQuestionsList = function() {
  return /** @type{!Array<!proto.api_proto.CustomQuestion>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api_proto.CustomQuestion, 1));
};


/** @param {!Array<!proto.api_proto.CustomQuestion>} value */
proto.api_proto.AskSpaceViewGetCustomQuestionsResponse.prototype.setQuestionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api_proto.CustomQuestion=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api_proto.CustomQuestion}
 */
proto.api_proto.AskSpaceViewGetCustomQuestionsResponse.prototype.addQuestions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api_proto.CustomQuestion, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.api_proto.AskSpaceViewGetCustomQuestionsResponse.prototype.clearQuestionsList = function() {
  this.setQuestionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.AskSpaceViewBuyAnswersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.AskSpaceViewBuyAnswersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.AskSpaceViewBuyAnswersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.AskSpaceViewBuyAnswersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    questionId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.AskSpaceViewBuyAnswersRequest}
 */
proto.api_proto.AskSpaceViewBuyAnswersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.AskSpaceViewBuyAnswersRequest;
  return proto.api_proto.AskSpaceViewBuyAnswersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.AskSpaceViewBuyAnswersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.AskSpaceViewBuyAnswersRequest}
 */
proto.api_proto.AskSpaceViewBuyAnswersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuestionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.AskSpaceViewBuyAnswersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.AskSpaceViewBuyAnswersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.AskSpaceViewBuyAnswersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.AskSpaceViewBuyAnswersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQuestionId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.api_proto.AskSpaceViewBuyAnswersRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.api_proto.AskSpaceViewBuyAnswersRequest.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string question_id = 2;
 * @return {string}
 */
proto.api_proto.AskSpaceViewBuyAnswersRequest.prototype.getQuestionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.api_proto.AskSpaceViewBuyAnswersRequest.prototype.setQuestionId = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api_proto.AskSpaceViewBuyAnswersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.AskSpaceViewBuyAnswersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.AskSpaceViewBuyAnswersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.AskSpaceViewBuyAnswersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.AskSpaceViewBuyAnswersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    answersList: jspb.Message.toObjectList(msg.getAnswersList(),
    proto.api_proto.Answer.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.AskSpaceViewBuyAnswersResponse}
 */
proto.api_proto.AskSpaceViewBuyAnswersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.AskSpaceViewBuyAnswersResponse;
  return proto.api_proto.AskSpaceViewBuyAnswersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.AskSpaceViewBuyAnswersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.AskSpaceViewBuyAnswersResponse}
 */
proto.api_proto.AskSpaceViewBuyAnswersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_proto.Answer;
      reader.readMessage(value,proto.api_proto.Answer.deserializeBinaryFromReader);
      msg.addAnswers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.AskSpaceViewBuyAnswersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.AskSpaceViewBuyAnswersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.AskSpaceViewBuyAnswersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.AskSpaceViewBuyAnswersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAnswersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.api_proto.Answer.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Answer answers = 1;
 * @return {!Array<!proto.api_proto.Answer>}
 */
proto.api_proto.AskSpaceViewBuyAnswersResponse.prototype.getAnswersList = function() {
  return /** @type{!Array<!proto.api_proto.Answer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api_proto.Answer, 1));
};


/** @param {!Array<!proto.api_proto.Answer>} value */
proto.api_proto.AskSpaceViewBuyAnswersResponse.prototype.setAnswersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api_proto.Answer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api_proto.Answer}
 */
proto.api_proto.AskSpaceViewBuyAnswersResponse.prototype.addAnswers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api_proto.Answer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.api_proto.AskSpaceViewBuyAnswersResponse.prototype.clearAnswersList = function() {
  this.setAnswersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.NearbyViewGetQuestionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.NearbyViewGetQuestionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.NearbyViewGetQuestionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.NearbyViewGetQuestionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    coordinates: (f = msg.getCoordinates()) && proto.api_proto.Coordinates.toObject(includeInstance, f),
    distanceLimit: +jspb.Message.getFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.NearbyViewGetQuestionsRequest}
 */
proto.api_proto.NearbyViewGetQuestionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.NearbyViewGetQuestionsRequest;
  return proto.api_proto.NearbyViewGetQuestionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.NearbyViewGetQuestionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.NearbyViewGetQuestionsRequest}
 */
proto.api_proto.NearbyViewGetQuestionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_proto.Coordinates;
      reader.readMessage(value,proto.api_proto.Coordinates.deserializeBinaryFromReader);
      msg.setCoordinates(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDistanceLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.NearbyViewGetQuestionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.NearbyViewGetQuestionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.NearbyViewGetQuestionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.NearbyViewGetQuestionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCoordinates();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api_proto.Coordinates.serializeBinaryToWriter
    );
  }
  f = message.getDistanceLimit();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional Coordinates coordinates = 1;
 * @return {?proto.api_proto.Coordinates}
 */
proto.api_proto.NearbyViewGetQuestionsRequest.prototype.getCoordinates = function() {
  return /** @type{?proto.api_proto.Coordinates} */ (
    jspb.Message.getWrapperField(this, proto.api_proto.Coordinates, 1));
};


/** @param {?proto.api_proto.Coordinates|undefined} value */
proto.api_proto.NearbyViewGetQuestionsRequest.prototype.setCoordinates = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.api_proto.NearbyViewGetQuestionsRequest.prototype.clearCoordinates = function() {
  this.setCoordinates(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_proto.NearbyViewGetQuestionsRequest.prototype.hasCoordinates = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double distance_limit = 2;
 * @return {number}
 */
proto.api_proto.NearbyViewGetQuestionsRequest.prototype.getDistanceLimit = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.api_proto.NearbyViewGetQuestionsRequest.prototype.setDistanceLimit = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.NearbyViewCustomQuestion.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.NearbyViewCustomQuestion.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.NearbyViewCustomQuestion} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.NearbyViewCustomQuestion.toObject = function(includeInstance, msg) {
  var f, obj = {
    question: (f = msg.getQuestion()) && proto.api_proto.CustomQuestion.toObject(includeInstance, f),
    space: (f = msg.getSpace()) && proto.api_proto.Space.toObject(includeInstance, f),
    user: (f = msg.getUser()) && proto.api_proto.User.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.NearbyViewCustomQuestion}
 */
proto.api_proto.NearbyViewCustomQuestion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.NearbyViewCustomQuestion;
  return proto.api_proto.NearbyViewCustomQuestion.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.NearbyViewCustomQuestion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.NearbyViewCustomQuestion}
 */
proto.api_proto.NearbyViewCustomQuestion.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_proto.CustomQuestion;
      reader.readMessage(value,proto.api_proto.CustomQuestion.deserializeBinaryFromReader);
      msg.setQuestion(value);
      break;
    case 2:
      var value = new proto.api_proto.Space;
      reader.readMessage(value,proto.api_proto.Space.deserializeBinaryFromReader);
      msg.setSpace(value);
      break;
    case 3:
      var value = new proto.api_proto.User;
      reader.readMessage(value,proto.api_proto.User.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.NearbyViewCustomQuestion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.NearbyViewCustomQuestion.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.NearbyViewCustomQuestion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.NearbyViewCustomQuestion.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuestion();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api_proto.CustomQuestion.serializeBinaryToWriter
    );
  }
  f = message.getSpace();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api_proto.Space.serializeBinaryToWriter
    );
  }
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api_proto.User.serializeBinaryToWriter
    );
  }
};


/**
 * optional CustomQuestion question = 1;
 * @return {?proto.api_proto.CustomQuestion}
 */
proto.api_proto.NearbyViewCustomQuestion.prototype.getQuestion = function() {
  return /** @type{?proto.api_proto.CustomQuestion} */ (
    jspb.Message.getWrapperField(this, proto.api_proto.CustomQuestion, 1));
};


/** @param {?proto.api_proto.CustomQuestion|undefined} value */
proto.api_proto.NearbyViewCustomQuestion.prototype.setQuestion = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.api_proto.NearbyViewCustomQuestion.prototype.clearQuestion = function() {
  this.setQuestion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_proto.NearbyViewCustomQuestion.prototype.hasQuestion = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Space space = 2;
 * @return {?proto.api_proto.Space}
 */
proto.api_proto.NearbyViewCustomQuestion.prototype.getSpace = function() {
  return /** @type{?proto.api_proto.Space} */ (
    jspb.Message.getWrapperField(this, proto.api_proto.Space, 2));
};


/** @param {?proto.api_proto.Space|undefined} value */
proto.api_proto.NearbyViewCustomQuestion.prototype.setSpace = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.api_proto.NearbyViewCustomQuestion.prototype.clearSpace = function() {
  this.setSpace(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_proto.NearbyViewCustomQuestion.prototype.hasSpace = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional User user = 3;
 * @return {?proto.api_proto.User}
 */
proto.api_proto.NearbyViewCustomQuestion.prototype.getUser = function() {
  return /** @type{?proto.api_proto.User} */ (
    jspb.Message.getWrapperField(this, proto.api_proto.User, 3));
};


/** @param {?proto.api_proto.User|undefined} value */
proto.api_proto.NearbyViewCustomQuestion.prototype.setUser = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.api_proto.NearbyViewCustomQuestion.prototype.clearUser = function() {
  this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_proto.NearbyViewCustomQuestion.prototype.hasUser = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.NearbyViewDefaultQuestion.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.NearbyViewDefaultQuestion.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.NearbyViewDefaultQuestion} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.NearbyViewDefaultQuestion.toObject = function(includeInstance, msg) {
  var f, obj = {
    question: (f = msg.getQuestion()) && proto.api_proto.DefaultQuestion.toObject(includeInstance, f),
    space: (f = msg.getSpace()) && proto.api_proto.Space.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.NearbyViewDefaultQuestion}
 */
proto.api_proto.NearbyViewDefaultQuestion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.NearbyViewDefaultQuestion;
  return proto.api_proto.NearbyViewDefaultQuestion.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.NearbyViewDefaultQuestion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.NearbyViewDefaultQuestion}
 */
proto.api_proto.NearbyViewDefaultQuestion.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_proto.DefaultQuestion;
      reader.readMessage(value,proto.api_proto.DefaultQuestion.deserializeBinaryFromReader);
      msg.setQuestion(value);
      break;
    case 2:
      var value = new proto.api_proto.Space;
      reader.readMessage(value,proto.api_proto.Space.deserializeBinaryFromReader);
      msg.setSpace(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.NearbyViewDefaultQuestion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.NearbyViewDefaultQuestion.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.NearbyViewDefaultQuestion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.NearbyViewDefaultQuestion.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuestion();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api_proto.DefaultQuestion.serializeBinaryToWriter
    );
  }
  f = message.getSpace();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api_proto.Space.serializeBinaryToWriter
    );
  }
};


/**
 * optional DefaultQuestion question = 1;
 * @return {?proto.api_proto.DefaultQuestion}
 */
proto.api_proto.NearbyViewDefaultQuestion.prototype.getQuestion = function() {
  return /** @type{?proto.api_proto.DefaultQuestion} */ (
    jspb.Message.getWrapperField(this, proto.api_proto.DefaultQuestion, 1));
};


/** @param {?proto.api_proto.DefaultQuestion|undefined} value */
proto.api_proto.NearbyViewDefaultQuestion.prototype.setQuestion = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.api_proto.NearbyViewDefaultQuestion.prototype.clearQuestion = function() {
  this.setQuestion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_proto.NearbyViewDefaultQuestion.prototype.hasQuestion = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Space space = 2;
 * @return {?proto.api_proto.Space}
 */
proto.api_proto.NearbyViewDefaultQuestion.prototype.getSpace = function() {
  return /** @type{?proto.api_proto.Space} */ (
    jspb.Message.getWrapperField(this, proto.api_proto.Space, 2));
};


/** @param {?proto.api_proto.Space|undefined} value */
proto.api_proto.NearbyViewDefaultQuestion.prototype.setSpace = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.api_proto.NearbyViewDefaultQuestion.prototype.clearSpace = function() {
  this.setSpace(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_proto.NearbyViewDefaultQuestion.prototype.hasSpace = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api_proto.NearbyViewGetQuestionsResponse.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.NearbyViewGetQuestionsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.NearbyViewGetQuestionsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.NearbyViewGetQuestionsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.NearbyViewGetQuestionsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    customQuestionsList: jspb.Message.toObjectList(msg.getCustomQuestionsList(),
    proto.api_proto.NearbyViewCustomQuestion.toObject, includeInstance),
    defaultQuestionsList: jspb.Message.toObjectList(msg.getDefaultQuestionsList(),
    proto.api_proto.NearbyViewDefaultQuestion.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.NearbyViewGetQuestionsResponse}
 */
proto.api_proto.NearbyViewGetQuestionsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.NearbyViewGetQuestionsResponse;
  return proto.api_proto.NearbyViewGetQuestionsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.NearbyViewGetQuestionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.NearbyViewGetQuestionsResponse}
 */
proto.api_proto.NearbyViewGetQuestionsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_proto.NearbyViewCustomQuestion;
      reader.readMessage(value,proto.api_proto.NearbyViewCustomQuestion.deserializeBinaryFromReader);
      msg.addCustomQuestions(value);
      break;
    case 2:
      var value = new proto.api_proto.NearbyViewDefaultQuestion;
      reader.readMessage(value,proto.api_proto.NearbyViewDefaultQuestion.deserializeBinaryFromReader);
      msg.addDefaultQuestions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.NearbyViewGetQuestionsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.NearbyViewGetQuestionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.NearbyViewGetQuestionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.NearbyViewGetQuestionsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomQuestionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.api_proto.NearbyViewCustomQuestion.serializeBinaryToWriter
    );
  }
  f = message.getDefaultQuestionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.api_proto.NearbyViewDefaultQuestion.serializeBinaryToWriter
    );
  }
};


/**
 * repeated NearbyViewCustomQuestion custom_questions = 1;
 * @return {!Array<!proto.api_proto.NearbyViewCustomQuestion>}
 */
proto.api_proto.NearbyViewGetQuestionsResponse.prototype.getCustomQuestionsList = function() {
  return /** @type{!Array<!proto.api_proto.NearbyViewCustomQuestion>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api_proto.NearbyViewCustomQuestion, 1));
};


/** @param {!Array<!proto.api_proto.NearbyViewCustomQuestion>} value */
proto.api_proto.NearbyViewGetQuestionsResponse.prototype.setCustomQuestionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api_proto.NearbyViewCustomQuestion=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api_proto.NearbyViewCustomQuestion}
 */
proto.api_proto.NearbyViewGetQuestionsResponse.prototype.addCustomQuestions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api_proto.NearbyViewCustomQuestion, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.api_proto.NearbyViewGetQuestionsResponse.prototype.clearCustomQuestionsList = function() {
  this.setCustomQuestionsList([]);
};


/**
 * repeated NearbyViewDefaultQuestion default_questions = 2;
 * @return {!Array<!proto.api_proto.NearbyViewDefaultQuestion>}
 */
proto.api_proto.NearbyViewGetQuestionsResponse.prototype.getDefaultQuestionsList = function() {
  return /** @type{!Array<!proto.api_proto.NearbyViewDefaultQuestion>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api_proto.NearbyViewDefaultQuestion, 2));
};


/** @param {!Array<!proto.api_proto.NearbyViewDefaultQuestion>} value */
proto.api_proto.NearbyViewGetQuestionsResponse.prototype.setDefaultQuestionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.api_proto.NearbyViewDefaultQuestion=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api_proto.NearbyViewDefaultQuestion}
 */
proto.api_proto.NearbyViewGetQuestionsResponse.prototype.addDefaultQuestions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.api_proto.NearbyViewDefaultQuestion, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.api_proto.NearbyViewGetQuestionsResponse.prototype.clearDefaultQuestionsList = function() {
  this.setDefaultQuestionsList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.api_proto.AnyNearbyViewQuestion.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.api_proto.AnyNearbyViewQuestion.QuestionCase = {
  QUESTION_NOT_SET: 0,
  CUSTOMQUESTION: 1,
  DEFAULTQUESTION: 2
};

/**
 * @return {proto.api_proto.AnyNearbyViewQuestion.QuestionCase}
 */
proto.api_proto.AnyNearbyViewQuestion.prototype.getQuestionCase = function() {
  return /** @type {proto.api_proto.AnyNearbyViewQuestion.QuestionCase} */(jspb.Message.computeOneofCase(this, proto.api_proto.AnyNearbyViewQuestion.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.AnyNearbyViewQuestion.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.AnyNearbyViewQuestion.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.AnyNearbyViewQuestion} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.AnyNearbyViewQuestion.toObject = function(includeInstance, msg) {
  var f, obj = {
    customquestion: (f = msg.getCustomquestion()) && proto.api_proto.NearbyViewCustomQuestion.toObject(includeInstance, f),
    defaultquestion: (f = msg.getDefaultquestion()) && proto.api_proto.NearbyViewDefaultQuestion.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.AnyNearbyViewQuestion}
 */
proto.api_proto.AnyNearbyViewQuestion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.AnyNearbyViewQuestion;
  return proto.api_proto.AnyNearbyViewQuestion.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.AnyNearbyViewQuestion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.AnyNearbyViewQuestion}
 */
proto.api_proto.AnyNearbyViewQuestion.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_proto.NearbyViewCustomQuestion;
      reader.readMessage(value,proto.api_proto.NearbyViewCustomQuestion.deserializeBinaryFromReader);
      msg.setCustomquestion(value);
      break;
    case 2:
      var value = new proto.api_proto.NearbyViewDefaultQuestion;
      reader.readMessage(value,proto.api_proto.NearbyViewDefaultQuestion.deserializeBinaryFromReader);
      msg.setDefaultquestion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.AnyNearbyViewQuestion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.AnyNearbyViewQuestion.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.AnyNearbyViewQuestion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.AnyNearbyViewQuestion.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomquestion();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api_proto.NearbyViewCustomQuestion.serializeBinaryToWriter
    );
  }
  f = message.getDefaultquestion();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api_proto.NearbyViewDefaultQuestion.serializeBinaryToWriter
    );
  }
};


/**
 * optional NearbyViewCustomQuestion customQuestion = 1;
 * @return {?proto.api_proto.NearbyViewCustomQuestion}
 */
proto.api_proto.AnyNearbyViewQuestion.prototype.getCustomquestion = function() {
  return /** @type{?proto.api_proto.NearbyViewCustomQuestion} */ (
    jspb.Message.getWrapperField(this, proto.api_proto.NearbyViewCustomQuestion, 1));
};


/** @param {?proto.api_proto.NearbyViewCustomQuestion|undefined} value */
proto.api_proto.AnyNearbyViewQuestion.prototype.setCustomquestion = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.api_proto.AnyNearbyViewQuestion.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.api_proto.AnyNearbyViewQuestion.prototype.clearCustomquestion = function() {
  this.setCustomquestion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_proto.AnyNearbyViewQuestion.prototype.hasCustomquestion = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional NearbyViewDefaultQuestion defaultQuestion = 2;
 * @return {?proto.api_proto.NearbyViewDefaultQuestion}
 */
proto.api_proto.AnyNearbyViewQuestion.prototype.getDefaultquestion = function() {
  return /** @type{?proto.api_proto.NearbyViewDefaultQuestion} */ (
    jspb.Message.getWrapperField(this, proto.api_proto.NearbyViewDefaultQuestion, 2));
};


/** @param {?proto.api_proto.NearbyViewDefaultQuestion|undefined} value */
proto.api_proto.AnyNearbyViewQuestion.prototype.setDefaultquestion = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.api_proto.AnyNearbyViewQuestion.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.api_proto.AnyNearbyViewQuestion.prototype.clearDefaultquestion = function() {
  this.setDefaultquestion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_proto.AnyNearbyViewQuestion.prototype.hasDefaultquestion = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api_proto.NearbyViewGetQuestionsResponseCombined.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.NearbyViewGetQuestionsResponseCombined.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.NearbyViewGetQuestionsResponseCombined.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.NearbyViewGetQuestionsResponseCombined} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.NearbyViewGetQuestionsResponseCombined.toObject = function(includeInstance, msg) {
  var f, obj = {
    nearbyviewquestionList: jspb.Message.toObjectList(msg.getNearbyviewquestionList(),
    proto.api_proto.AnyNearbyViewQuestion.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.NearbyViewGetQuestionsResponseCombined}
 */
proto.api_proto.NearbyViewGetQuestionsResponseCombined.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.NearbyViewGetQuestionsResponseCombined;
  return proto.api_proto.NearbyViewGetQuestionsResponseCombined.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.NearbyViewGetQuestionsResponseCombined} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.NearbyViewGetQuestionsResponseCombined}
 */
proto.api_proto.NearbyViewGetQuestionsResponseCombined.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_proto.AnyNearbyViewQuestion;
      reader.readMessage(value,proto.api_proto.AnyNearbyViewQuestion.deserializeBinaryFromReader);
      msg.addNearbyviewquestion(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.NearbyViewGetQuestionsResponseCombined.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.NearbyViewGetQuestionsResponseCombined.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.NearbyViewGetQuestionsResponseCombined} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.NearbyViewGetQuestionsResponseCombined.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNearbyviewquestionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.api_proto.AnyNearbyViewQuestion.serializeBinaryToWriter
    );
  }
};


/**
 * repeated AnyNearbyViewQuestion nearbyViewQuestion = 1;
 * @return {!Array<!proto.api_proto.AnyNearbyViewQuestion>}
 */
proto.api_proto.NearbyViewGetQuestionsResponseCombined.prototype.getNearbyviewquestionList = function() {
  return /** @type{!Array<!proto.api_proto.AnyNearbyViewQuestion>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api_proto.AnyNearbyViewQuestion, 1));
};


/** @param {!Array<!proto.api_proto.AnyNearbyViewQuestion>} value */
proto.api_proto.NearbyViewGetQuestionsResponseCombined.prototype.setNearbyviewquestionList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api_proto.AnyNearbyViewQuestion=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api_proto.AnyNearbyViewQuestion}
 */
proto.api_proto.NearbyViewGetQuestionsResponseCombined.prototype.addNearbyviewquestion = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api_proto.AnyNearbyViewQuestion, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.api_proto.NearbyViewGetQuestionsResponseCombined.prototype.clearNearbyviewquestionList = function() {
  this.setNearbyviewquestionList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.TransactionObject.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.TransactionObject.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.TransactionObject} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.TransactionObject.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    amount: jspb.Message.getFieldWithDefault(msg, 2, 0),
    initiator: jspb.Message.getFieldWithDefault(msg, 3, ""),
    status: jspb.Message.getFieldWithDefault(msg, 4, 0),
    timeCreated: jspb.Message.getFieldWithDefault(msg, 5, 0),
    timeUpdated: jspb.Message.getFieldWithDefault(msg, 6, 0),
    subject: jspb.Message.getFieldWithDefault(msg, 7, ""),
    id: jspb.Message.getFieldWithDefault(msg, 8, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.TransactionObject}
 */
proto.api_proto.TransactionObject.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.TransactionObject;
  return proto.api_proto.TransactionObject.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.TransactionObject} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.TransactionObject}
 */
proto.api_proto.TransactionObject.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.api_proto.TransactionType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAmount(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setInitiator(value);
      break;
    case 4:
      var value = /** @type {!proto.api_proto.TransactionStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTimeCreated(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTimeUpdated(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubject(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.TransactionObject.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.TransactionObject.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.TransactionObject} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.TransactionObject.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getAmount();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getInitiator();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getTimeCreated();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getTimeUpdated();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getSubject();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional TransactionType type = 1;
 * @return {!proto.api_proto.TransactionType}
 */
proto.api_proto.TransactionObject.prototype.getType = function() {
  return /** @type {!proto.api_proto.TransactionType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.api_proto.TransactionType} value */
proto.api_proto.TransactionObject.prototype.setType = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional uint32 amount = 2;
 * @return {number}
 */
proto.api_proto.TransactionObject.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.api_proto.TransactionObject.prototype.setAmount = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string initiator = 3;
 * @return {string}
 */
proto.api_proto.TransactionObject.prototype.getInitiator = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.api_proto.TransactionObject.prototype.setInitiator = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional TransactionStatus status = 4;
 * @return {!proto.api_proto.TransactionStatus}
 */
proto.api_proto.TransactionObject.prototype.getStatus = function() {
  return /** @type {!proto.api_proto.TransactionStatus} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.api_proto.TransactionStatus} value */
proto.api_proto.TransactionObject.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional uint64 time_created = 5;
 * @return {number}
 */
proto.api_proto.TransactionObject.prototype.getTimeCreated = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.api_proto.TransactionObject.prototype.setTimeCreated = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint64 time_updated = 6;
 * @return {number}
 */
proto.api_proto.TransactionObject.prototype.getTimeUpdated = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.api_proto.TransactionObject.prototype.setTimeUpdated = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string subject = 7;
 * @return {string}
 */
proto.api_proto.TransactionObject.prototype.getSubject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.api_proto.TransactionObject.prototype.setSubject = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string id = 8;
 * @return {string}
 */
proto.api_proto.TransactionObject.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.api_proto.TransactionObject.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.GetAllTransactionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.GetAllTransactionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.GetAllTransactionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.GetAllTransactionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.GetAllTransactionsRequest}
 */
proto.api_proto.GetAllTransactionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.GetAllTransactionsRequest;
  return proto.api_proto.GetAllTransactionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.GetAllTransactionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.GetAllTransactionsRequest}
 */
proto.api_proto.GetAllTransactionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.GetAllTransactionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.GetAllTransactionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.GetAllTransactionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.GetAllTransactionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api_proto.GetAllTransactionsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.GetAllTransactionsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.GetAllTransactionsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.GetAllTransactionsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.GetAllTransactionsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    transactionsList: jspb.Message.toObjectList(msg.getTransactionsList(),
    proto.api_proto.TransactionObject.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.GetAllTransactionsResponse}
 */
proto.api_proto.GetAllTransactionsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.GetAllTransactionsResponse;
  return proto.api_proto.GetAllTransactionsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.GetAllTransactionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.GetAllTransactionsResponse}
 */
proto.api_proto.GetAllTransactionsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_proto.TransactionObject;
      reader.readMessage(value,proto.api_proto.TransactionObject.deserializeBinaryFromReader);
      msg.addTransactions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.GetAllTransactionsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.GetAllTransactionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.GetAllTransactionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.GetAllTransactionsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransactionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.api_proto.TransactionObject.serializeBinaryToWriter
    );
  }
};


/**
 * repeated TransactionObject transactions = 1;
 * @return {!Array<!proto.api_proto.TransactionObject>}
 */
proto.api_proto.GetAllTransactionsResponse.prototype.getTransactionsList = function() {
  return /** @type{!Array<!proto.api_proto.TransactionObject>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api_proto.TransactionObject, 1));
};


/** @param {!Array<!proto.api_proto.TransactionObject>} value */
proto.api_proto.GetAllTransactionsResponse.prototype.setTransactionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api_proto.TransactionObject=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api_proto.TransactionObject}
 */
proto.api_proto.GetAllTransactionsResponse.prototype.addTransactions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api_proto.TransactionObject, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.api_proto.GetAllTransactionsResponse.prototype.clearTransactionsList = function() {
  this.setTransactionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.SearchSpaceByNameRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.SearchSpaceByNameRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.SearchSpaceByNameRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.SearchSpaceByNameRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    queryString: jspb.Message.getFieldWithDefault(msg, 1, ""),
    coordinates: (f = msg.getCoordinates()) && proto.api_proto.Coordinates.toObject(includeInstance, f),
    isValidCoordinates: jspb.Message.getFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.SearchSpaceByNameRequest}
 */
proto.api_proto.SearchSpaceByNameRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.SearchSpaceByNameRequest;
  return proto.api_proto.SearchSpaceByNameRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.SearchSpaceByNameRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.SearchSpaceByNameRequest}
 */
proto.api_proto.SearchSpaceByNameRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQueryString(value);
      break;
    case 2:
      var value = new proto.api_proto.Coordinates;
      reader.readMessage(value,proto.api_proto.Coordinates.deserializeBinaryFromReader);
      msg.setCoordinates(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsValidCoordinates(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.SearchSpaceByNameRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.SearchSpaceByNameRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.SearchSpaceByNameRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.SearchSpaceByNameRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQueryString();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCoordinates();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api_proto.Coordinates.serializeBinaryToWriter
    );
  }
  f = message.getIsValidCoordinates();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string query_string = 1;
 * @return {string}
 */
proto.api_proto.SearchSpaceByNameRequest.prototype.getQueryString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.api_proto.SearchSpaceByNameRequest.prototype.setQueryString = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Coordinates coordinates = 2;
 * @return {?proto.api_proto.Coordinates}
 */
proto.api_proto.SearchSpaceByNameRequest.prototype.getCoordinates = function() {
  return /** @type{?proto.api_proto.Coordinates} */ (
    jspb.Message.getWrapperField(this, proto.api_proto.Coordinates, 2));
};


/** @param {?proto.api_proto.Coordinates|undefined} value */
proto.api_proto.SearchSpaceByNameRequest.prototype.setCoordinates = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.api_proto.SearchSpaceByNameRequest.prototype.clearCoordinates = function() {
  this.setCoordinates(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_proto.SearchSpaceByNameRequest.prototype.hasCoordinates = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional bool is_valid_coordinates = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.api_proto.SearchSpaceByNameRequest.prototype.getIsValidCoordinates = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.api_proto.SearchSpaceByNameRequest.prototype.setIsValidCoordinates = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api_proto.SearchSpaceByNameResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.SearchSpaceByNameResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.SearchSpaceByNameResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.SearchSpaceByNameResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.SearchSpaceByNameResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.api_proto.Space.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.SearchSpaceByNameResponse}
 */
proto.api_proto.SearchSpaceByNameResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.SearchSpaceByNameResponse;
  return proto.api_proto.SearchSpaceByNameResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.SearchSpaceByNameResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.SearchSpaceByNameResponse}
 */
proto.api_proto.SearchSpaceByNameResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_proto.Space;
      reader.readMessage(value,proto.api_proto.Space.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.SearchSpaceByNameResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.SearchSpaceByNameResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.SearchSpaceByNameResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.SearchSpaceByNameResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.api_proto.Space.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Space results = 1;
 * @return {!Array<!proto.api_proto.Space>}
 */
proto.api_proto.SearchSpaceByNameResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.api_proto.Space>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api_proto.Space, 1));
};


/** @param {!Array<!proto.api_proto.Space>} value */
proto.api_proto.SearchSpaceByNameResponse.prototype.setResultsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api_proto.Space=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api_proto.Space}
 */
proto.api_proto.SearchSpaceByNameResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api_proto.Space, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.api_proto.SearchSpaceByNameResponse.prototype.clearResultsList = function() {
  this.setResultsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.AddPartialSpaceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.AddPartialSpaceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.AddPartialSpaceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.AddPartialSpaceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    space: (f = msg.getSpace()) && proto.api_proto.Space.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.AddPartialSpaceRequest}
 */
proto.api_proto.AddPartialSpaceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.AddPartialSpaceRequest;
  return proto.api_proto.AddPartialSpaceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.AddPartialSpaceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.AddPartialSpaceRequest}
 */
proto.api_proto.AddPartialSpaceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_proto.Space;
      reader.readMessage(value,proto.api_proto.Space.deserializeBinaryFromReader);
      msg.setSpace(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.AddPartialSpaceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.AddPartialSpaceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.AddPartialSpaceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.AddPartialSpaceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSpace();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api_proto.Space.serializeBinaryToWriter
    );
  }
};


/**
 * optional Space space = 1;
 * @return {?proto.api_proto.Space}
 */
proto.api_proto.AddPartialSpaceRequest.prototype.getSpace = function() {
  return /** @type{?proto.api_proto.Space} */ (
    jspb.Message.getWrapperField(this, proto.api_proto.Space, 1));
};


/** @param {?proto.api_proto.Space|undefined} value */
proto.api_proto.AddPartialSpaceRequest.prototype.setSpace = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.api_proto.AddPartialSpaceRequest.prototype.clearSpace = function() {
  this.setSpace(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_proto.AddPartialSpaceRequest.prototype.hasSpace = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.AddPartialSpaceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.AddPartialSpaceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.AddPartialSpaceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.AddPartialSpaceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.AddPartialSpaceResponse}
 */
proto.api_proto.AddPartialSpaceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.AddPartialSpaceResponse;
  return proto.api_proto.AddPartialSpaceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.AddPartialSpaceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.AddPartialSpaceResponse}
 */
proto.api_proto.AddPartialSpaceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.AddPartialSpaceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.AddPartialSpaceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.AddPartialSpaceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.AddPartialSpaceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.api_proto.AddPartialSpaceResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.api_proto.AddPartialSpaceResponse.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.AddFullSpaceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.AddFullSpaceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.AddFullSpaceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.AddFullSpaceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    space: (f = msg.getSpace()) && proto.api_proto.SpaceDetail.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.AddFullSpaceRequest}
 */
proto.api_proto.AddFullSpaceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.AddFullSpaceRequest;
  return proto.api_proto.AddFullSpaceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.AddFullSpaceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.AddFullSpaceRequest}
 */
proto.api_proto.AddFullSpaceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_proto.SpaceDetail;
      reader.readMessage(value,proto.api_proto.SpaceDetail.deserializeBinaryFromReader);
      msg.setSpace(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.AddFullSpaceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.AddFullSpaceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.AddFullSpaceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.AddFullSpaceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSpace();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api_proto.SpaceDetail.serializeBinaryToWriter
    );
  }
};


/**
 * optional SpaceDetail space = 1;
 * @return {?proto.api_proto.SpaceDetail}
 */
proto.api_proto.AddFullSpaceRequest.prototype.getSpace = function() {
  return /** @type{?proto.api_proto.SpaceDetail} */ (
    jspb.Message.getWrapperField(this, proto.api_proto.SpaceDetail, 1));
};


/** @param {?proto.api_proto.SpaceDetail|undefined} value */
proto.api_proto.AddFullSpaceRequest.prototype.setSpace = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.api_proto.AddFullSpaceRequest.prototype.clearSpace = function() {
  this.setSpace(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_proto.AddFullSpaceRequest.prototype.hasSpace = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.AddFullSpaceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.AddFullSpaceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.AddFullSpaceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.AddFullSpaceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.AddFullSpaceResponse}
 */
proto.api_proto.AddFullSpaceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.AddFullSpaceResponse;
  return proto.api_proto.AddFullSpaceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.AddFullSpaceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.AddFullSpaceResponse}
 */
proto.api_proto.AddFullSpaceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.AddFullSpaceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.AddFullSpaceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.AddFullSpaceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.AddFullSpaceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.api_proto.AddFullSpaceResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.api_proto.AddFullSpaceResponse.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.GetSpaceDetailsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.GetSpaceDetailsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.GetSpaceDetailsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.GetSpaceDetailsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.GetSpaceDetailsRequest}
 */
proto.api_proto.GetSpaceDetailsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.GetSpaceDetailsRequest;
  return proto.api_proto.GetSpaceDetailsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.GetSpaceDetailsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.GetSpaceDetailsRequest}
 */
proto.api_proto.GetSpaceDetailsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.GetSpaceDetailsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.GetSpaceDetailsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.GetSpaceDetailsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.GetSpaceDetailsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.api_proto.GetSpaceDetailsRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.api_proto.GetSpaceDetailsRequest.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.GetSpaceDetailsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.GetSpaceDetailsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.GetSpaceDetailsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.GetSpaceDetailsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    space: (f = msg.getSpace()) && proto.api_proto.Space.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.GetSpaceDetailsResponse}
 */
proto.api_proto.GetSpaceDetailsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.GetSpaceDetailsResponse;
  return proto.api_proto.GetSpaceDetailsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.GetSpaceDetailsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.GetSpaceDetailsResponse}
 */
proto.api_proto.GetSpaceDetailsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_proto.Space;
      reader.readMessage(value,proto.api_proto.Space.deserializeBinaryFromReader);
      msg.setSpace(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.GetSpaceDetailsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.GetSpaceDetailsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.GetSpaceDetailsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.GetSpaceDetailsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSpace();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api_proto.Space.serializeBinaryToWriter
    );
  }
};


/**
 * optional Space space = 1;
 * @return {?proto.api_proto.Space}
 */
proto.api_proto.GetSpaceDetailsResponse.prototype.getSpace = function() {
  return /** @type{?proto.api_proto.Space} */ (
    jspb.Message.getWrapperField(this, proto.api_proto.Space, 1));
};


/** @param {?proto.api_proto.Space|undefined} value */
proto.api_proto.GetSpaceDetailsResponse.prototype.setSpace = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.api_proto.GetSpaceDetailsResponse.prototype.clearSpace = function() {
  this.setSpace(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_proto.GetSpaceDetailsResponse.prototype.hasSpace = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api_proto.GetBulkSpaceDetailsRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.GetBulkSpaceDetailsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.GetBulkSpaceDetailsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.GetBulkSpaceDetailsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.GetBulkSpaceDetailsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    idsList: jspb.Message.getRepeatedField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.GetBulkSpaceDetailsRequest}
 */
proto.api_proto.GetBulkSpaceDetailsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.GetBulkSpaceDetailsRequest;
  return proto.api_proto.GetBulkSpaceDetailsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.GetBulkSpaceDetailsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.GetBulkSpaceDetailsRequest}
 */
proto.api_proto.GetBulkSpaceDetailsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.GetBulkSpaceDetailsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.GetBulkSpaceDetailsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.GetBulkSpaceDetailsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.GetBulkSpaceDetailsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string ids = 1;
 * @return {!Array<string>}
 */
proto.api_proto.GetBulkSpaceDetailsRequest.prototype.getIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<string>} value */
proto.api_proto.GetBulkSpaceDetailsRequest.prototype.setIdsList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.api_proto.GetBulkSpaceDetailsRequest.prototype.addIds = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.api_proto.GetBulkSpaceDetailsRequest.prototype.clearIdsList = function() {
  this.setIdsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api_proto.GetBulkSpaceDetailsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.GetBulkSpaceDetailsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.GetBulkSpaceDetailsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.GetBulkSpaceDetailsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.GetBulkSpaceDetailsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    spacesList: jspb.Message.toObjectList(msg.getSpacesList(),
    proto.api_proto.Space.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.GetBulkSpaceDetailsResponse}
 */
proto.api_proto.GetBulkSpaceDetailsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.GetBulkSpaceDetailsResponse;
  return proto.api_proto.GetBulkSpaceDetailsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.GetBulkSpaceDetailsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.GetBulkSpaceDetailsResponse}
 */
proto.api_proto.GetBulkSpaceDetailsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_proto.Space;
      reader.readMessage(value,proto.api_proto.Space.deserializeBinaryFromReader);
      msg.addSpaces(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.GetBulkSpaceDetailsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.GetBulkSpaceDetailsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.GetBulkSpaceDetailsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.GetBulkSpaceDetailsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSpacesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.api_proto.Space.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Space spaces = 1;
 * @return {!Array<!proto.api_proto.Space>}
 */
proto.api_proto.GetBulkSpaceDetailsResponse.prototype.getSpacesList = function() {
  return /** @type{!Array<!proto.api_proto.Space>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api_proto.Space, 1));
};


/** @param {!Array<!proto.api_proto.Space>} value */
proto.api_proto.GetBulkSpaceDetailsResponse.prototype.setSpacesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api_proto.Space=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api_proto.Space}
 */
proto.api_proto.GetBulkSpaceDetailsResponse.prototype.addSpaces = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api_proto.Space, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.api_proto.GetBulkSpaceDetailsResponse.prototype.clearSpacesList = function() {
  this.setSpacesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.GetNearbySpaceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.GetNearbySpaceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.GetNearbySpaceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.GetNearbySpaceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    coordinates: (f = msg.getCoordinates()) && proto.api_proto.Coordinates.toObject(includeInstance, f),
    distanceLimit: +jspb.Message.getFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.GetNearbySpaceRequest}
 */
proto.api_proto.GetNearbySpaceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.GetNearbySpaceRequest;
  return proto.api_proto.GetNearbySpaceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.GetNearbySpaceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.GetNearbySpaceRequest}
 */
proto.api_proto.GetNearbySpaceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_proto.Coordinates;
      reader.readMessage(value,proto.api_proto.Coordinates.deserializeBinaryFromReader);
      msg.setCoordinates(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDistanceLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.GetNearbySpaceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.GetNearbySpaceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.GetNearbySpaceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.GetNearbySpaceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCoordinates();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api_proto.Coordinates.serializeBinaryToWriter
    );
  }
  f = message.getDistanceLimit();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional Coordinates coordinates = 1;
 * @return {?proto.api_proto.Coordinates}
 */
proto.api_proto.GetNearbySpaceRequest.prototype.getCoordinates = function() {
  return /** @type{?proto.api_proto.Coordinates} */ (
    jspb.Message.getWrapperField(this, proto.api_proto.Coordinates, 1));
};


/** @param {?proto.api_proto.Coordinates|undefined} value */
proto.api_proto.GetNearbySpaceRequest.prototype.setCoordinates = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.api_proto.GetNearbySpaceRequest.prototype.clearCoordinates = function() {
  this.setCoordinates(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_proto.GetNearbySpaceRequest.prototype.hasCoordinates = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double distance_limit = 2;
 * @return {number}
 */
proto.api_proto.GetNearbySpaceRequest.prototype.getDistanceLimit = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.api_proto.GetNearbySpaceRequest.prototype.setDistanceLimit = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api_proto.GetNearbySpaceResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.GetNearbySpaceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.GetNearbySpaceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.GetNearbySpaceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.GetNearbySpaceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    spacesList: jspb.Message.toObjectList(msg.getSpacesList(),
    proto.api_proto.Space.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.GetNearbySpaceResponse}
 */
proto.api_proto.GetNearbySpaceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.GetNearbySpaceResponse;
  return proto.api_proto.GetNearbySpaceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.GetNearbySpaceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.GetNearbySpaceResponse}
 */
proto.api_proto.GetNearbySpaceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_proto.Space;
      reader.readMessage(value,proto.api_proto.Space.deserializeBinaryFromReader);
      msg.addSpaces(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.GetNearbySpaceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.GetNearbySpaceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.GetNearbySpaceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.GetNearbySpaceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSpacesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.api_proto.Space.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Space spaces = 1;
 * @return {!Array<!proto.api_proto.Space>}
 */
proto.api_proto.GetNearbySpaceResponse.prototype.getSpacesList = function() {
  return /** @type{!Array<!proto.api_proto.Space>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api_proto.Space, 1));
};


/** @param {!Array<!proto.api_proto.Space>} value */
proto.api_proto.GetNearbySpaceResponse.prototype.setSpacesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api_proto.Space=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api_proto.Space}
 */
proto.api_proto.GetNearbySpaceResponse.prototype.addSpaces = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api_proto.Space, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.api_proto.GetNearbySpaceResponse.prototype.clearSpacesList = function() {
  this.setSpacesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.DeleteQuestionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.DeleteQuestionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.DeleteQuestionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.DeleteQuestionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    qid: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.DeleteQuestionRequest}
 */
proto.api_proto.DeleteQuestionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.DeleteQuestionRequest;
  return proto.api_proto.DeleteQuestionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.DeleteQuestionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.DeleteQuestionRequest}
 */
proto.api_proto.DeleteQuestionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.DeleteQuestionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.DeleteQuestionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.DeleteQuestionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.DeleteQuestionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string qid = 1;
 * @return {string}
 */
proto.api_proto.DeleteQuestionRequest.prototype.getQid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.api_proto.DeleteQuestionRequest.prototype.setQid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.DeleteQuestionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.DeleteQuestionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.DeleteQuestionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.DeleteQuestionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.DeleteQuestionResponse}
 */
proto.api_proto.DeleteQuestionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.DeleteQuestionResponse;
  return proto.api_proto.DeleteQuestionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.DeleteQuestionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.DeleteQuestionResponse}
 */
proto.api_proto.DeleteQuestionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.DeleteQuestionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.DeleteQuestionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.DeleteQuestionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.DeleteQuestionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.api_proto.DeleteQuestionResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.api_proto.DeleteQuestionResponse.prototype.setSuccess = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api_proto.GetAllSpacesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.GetAllSpacesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.GetAllSpacesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.GetAllSpacesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.GetAllSpacesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    spacesList: jspb.Message.toObjectList(msg.getSpacesList(),
    proto.api_proto.SpaceDetail.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.GetAllSpacesResponse}
 */
proto.api_proto.GetAllSpacesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.GetAllSpacesResponse;
  return proto.api_proto.GetAllSpacesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.GetAllSpacesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.GetAllSpacesResponse}
 */
proto.api_proto.GetAllSpacesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_proto.SpaceDetail;
      reader.readMessage(value,proto.api_proto.SpaceDetail.deserializeBinaryFromReader);
      msg.addSpaces(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.GetAllSpacesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.GetAllSpacesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.GetAllSpacesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.GetAllSpacesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSpacesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.api_proto.SpaceDetail.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SpaceDetail spaces = 1;
 * @return {!Array<!proto.api_proto.SpaceDetail>}
 */
proto.api_proto.GetAllSpacesResponse.prototype.getSpacesList = function() {
  return /** @type{!Array<!proto.api_proto.SpaceDetail>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api_proto.SpaceDetail, 1));
};


/** @param {!Array<!proto.api_proto.SpaceDetail>} value */
proto.api_proto.GetAllSpacesResponse.prototype.setSpacesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api_proto.SpaceDetail=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api_proto.SpaceDetail}
 */
proto.api_proto.GetAllSpacesResponse.prototype.addSpaces = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api_proto.SpaceDetail, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.api_proto.GetAllSpacesResponse.prototype.clearSpacesList = function() {
  this.setSpacesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.UpdateSpaceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.UpdateSpaceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.UpdateSpaceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.UpdateSpaceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    spaceId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    space: (f = msg.getSpace()) && proto.api_proto.SpaceDetail.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.UpdateSpaceRequest}
 */
proto.api_proto.UpdateSpaceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.UpdateSpaceRequest;
  return proto.api_proto.UpdateSpaceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.UpdateSpaceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.UpdateSpaceRequest}
 */
proto.api_proto.UpdateSpaceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSpaceId(value);
      break;
    case 2:
      var value = new proto.api_proto.SpaceDetail;
      reader.readMessage(value,proto.api_proto.SpaceDetail.deserializeBinaryFromReader);
      msg.setSpace(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.UpdateSpaceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.UpdateSpaceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.UpdateSpaceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.UpdateSpaceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSpaceId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSpace();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api_proto.SpaceDetail.serializeBinaryToWriter
    );
  }
};


/**
 * optional string space_id = 1;
 * @return {string}
 */
proto.api_proto.UpdateSpaceRequest.prototype.getSpaceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.api_proto.UpdateSpaceRequest.prototype.setSpaceId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional SpaceDetail space = 2;
 * @return {?proto.api_proto.SpaceDetail}
 */
proto.api_proto.UpdateSpaceRequest.prototype.getSpace = function() {
  return /** @type{?proto.api_proto.SpaceDetail} */ (
    jspb.Message.getWrapperField(this, proto.api_proto.SpaceDetail, 2));
};


/** @param {?proto.api_proto.SpaceDetail|undefined} value */
proto.api_proto.UpdateSpaceRequest.prototype.setSpace = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.api_proto.UpdateSpaceRequest.prototype.clearSpace = function() {
  this.setSpace(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_proto.UpdateSpaceRequest.prototype.hasSpace = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.UpdateSpaceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.UpdateSpaceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.UpdateSpaceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.UpdateSpaceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    space: (f = msg.getSpace()) && proto.api_proto.SpaceDetail.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.UpdateSpaceResponse}
 */
proto.api_proto.UpdateSpaceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.UpdateSpaceResponse;
  return proto.api_proto.UpdateSpaceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.UpdateSpaceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.UpdateSpaceResponse}
 */
proto.api_proto.UpdateSpaceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_proto.SpaceDetail;
      reader.readMessage(value,proto.api_proto.SpaceDetail.deserializeBinaryFromReader);
      msg.setSpace(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.UpdateSpaceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.UpdateSpaceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.UpdateSpaceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.UpdateSpaceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSpace();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api_proto.SpaceDetail.serializeBinaryToWriter
    );
  }
};


/**
 * optional SpaceDetail space = 1;
 * @return {?proto.api_proto.SpaceDetail}
 */
proto.api_proto.UpdateSpaceResponse.prototype.getSpace = function() {
  return /** @type{?proto.api_proto.SpaceDetail} */ (
    jspb.Message.getWrapperField(this, proto.api_proto.SpaceDetail, 1));
};


/** @param {?proto.api_proto.SpaceDetail|undefined} value */
proto.api_proto.UpdateSpaceResponse.prototype.setSpace = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.api_proto.UpdateSpaceResponse.prototype.clearSpace = function() {
  this.setSpace(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.api_proto.UpdateSpaceResponse.prototype.hasSpace = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.GetAllAnswersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.GetAllAnswersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.GetAllAnswersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.GetAllAnswersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.GetAllAnswersRequest}
 */
proto.api_proto.GetAllAnswersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.GetAllAnswersRequest;
  return proto.api_proto.GetAllAnswersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.GetAllAnswersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.GetAllAnswersRequest}
 */
proto.api_proto.GetAllAnswersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.GetAllAnswersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.GetAllAnswersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.GetAllAnswersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.GetAllAnswersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api_proto.GetAllAnswersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.GetAllAnswersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.GetAllAnswersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.GetAllAnswersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.GetAllAnswersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    answersList: jspb.Message.toObjectList(msg.getAnswersList(),
    proto.api_proto.Answer.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.GetAllAnswersResponse}
 */
proto.api_proto.GetAllAnswersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.GetAllAnswersResponse;
  return proto.api_proto.GetAllAnswersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.GetAllAnswersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.GetAllAnswersResponse}
 */
proto.api_proto.GetAllAnswersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_proto.Answer;
      reader.readMessage(value,proto.api_proto.Answer.deserializeBinaryFromReader);
      msg.addAnswers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.GetAllAnswersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.GetAllAnswersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.GetAllAnswersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.GetAllAnswersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAnswersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.api_proto.Answer.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Answer answers = 1;
 * @return {!Array<!proto.api_proto.Answer>}
 */
proto.api_proto.GetAllAnswersResponse.prototype.getAnswersList = function() {
  return /** @type{!Array<!proto.api_proto.Answer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api_proto.Answer, 1));
};


/** @param {!Array<!proto.api_proto.Answer>} value */
proto.api_proto.GetAllAnswersResponse.prototype.setAnswersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api_proto.Answer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api_proto.Answer}
 */
proto.api_proto.GetAllAnswersResponse.prototype.addAnswers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api_proto.Answer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.api_proto.GetAllAnswersResponse.prototype.clearAnswersList = function() {
  this.setAnswersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.GetAllQuestionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.GetAllQuestionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.GetAllQuestionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.GetAllQuestionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.GetAllQuestionsRequest}
 */
proto.api_proto.GetAllQuestionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.GetAllQuestionsRequest;
  return proto.api_proto.GetAllQuestionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.GetAllQuestionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.GetAllQuestionsRequest}
 */
proto.api_proto.GetAllQuestionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.GetAllQuestionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.GetAllQuestionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.GetAllQuestionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.GetAllQuestionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api_proto.GetAllQuestionsResponse.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api_proto.GetAllQuestionsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.api_proto.GetAllQuestionsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api_proto.GetAllQuestionsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.GetAllQuestionsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    customquestionsList: jspb.Message.toObjectList(msg.getCustomquestionsList(),
    proto.api_proto.CustomQuestion.toObject, includeInstance),
    defaultquestionsList: jspb.Message.toObjectList(msg.getDefaultquestionsList(),
    proto.api_proto.DefaultQuestion.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api_proto.GetAllQuestionsResponse}
 */
proto.api_proto.GetAllQuestionsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api_proto.GetAllQuestionsResponse;
  return proto.api_proto.GetAllQuestionsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api_proto.GetAllQuestionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api_proto.GetAllQuestionsResponse}
 */
proto.api_proto.GetAllQuestionsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api_proto.CustomQuestion;
      reader.readMessage(value,proto.api_proto.CustomQuestion.deserializeBinaryFromReader);
      msg.addCustomquestions(value);
      break;
    case 2:
      var value = new proto.api_proto.DefaultQuestion;
      reader.readMessage(value,proto.api_proto.DefaultQuestion.deserializeBinaryFromReader);
      msg.addDefaultquestions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api_proto.GetAllQuestionsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api_proto.GetAllQuestionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api_proto.GetAllQuestionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api_proto.GetAllQuestionsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomquestionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.api_proto.CustomQuestion.serializeBinaryToWriter
    );
  }
  f = message.getDefaultquestionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.api_proto.DefaultQuestion.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CustomQuestion customQuestions = 1;
 * @return {!Array<!proto.api_proto.CustomQuestion>}
 */
proto.api_proto.GetAllQuestionsResponse.prototype.getCustomquestionsList = function() {
  return /** @type{!Array<!proto.api_proto.CustomQuestion>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api_proto.CustomQuestion, 1));
};


/** @param {!Array<!proto.api_proto.CustomQuestion>} value */
proto.api_proto.GetAllQuestionsResponse.prototype.setCustomquestionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api_proto.CustomQuestion=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api_proto.CustomQuestion}
 */
proto.api_proto.GetAllQuestionsResponse.prototype.addCustomquestions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api_proto.CustomQuestion, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.api_proto.GetAllQuestionsResponse.prototype.clearCustomquestionsList = function() {
  this.setCustomquestionsList([]);
};


/**
 * repeated DefaultQuestion defaultQuestions = 2;
 * @return {!Array<!proto.api_proto.DefaultQuestion>}
 */
proto.api_proto.GetAllQuestionsResponse.prototype.getDefaultquestionsList = function() {
  return /** @type{!Array<!proto.api_proto.DefaultQuestion>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api_proto.DefaultQuestion, 2));
};


/** @param {!Array<!proto.api_proto.DefaultQuestion>} value */
proto.api_proto.GetAllQuestionsResponse.prototype.setDefaultquestionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.api_proto.DefaultQuestion=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api_proto.DefaultQuestion}
 */
proto.api_proto.GetAllQuestionsResponse.prototype.addDefaultquestions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.api_proto.DefaultQuestion, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.api_proto.GetAllQuestionsResponse.prototype.clearDefaultquestionsList = function() {
  this.setDefaultquestionsList([]);
};


/**
 * @enum {number}
 */
proto.api_proto.CustomQuestionStatus = {
  ASKED: 0,
  ANSWERED: 1,
  CANCELED: 2,
  CLEARED: 3
};

/**
 * @enum {number}
 */
proto.api_proto.TransactionStatus = {
  APPROVED: 0,
  UNDER_REVIEW: 1,
  CANCELLED: 2
};

/**
 * @enum {number}
 */
proto.api_proto.TransactionType = {
  PAY_FOR_QUESTION: 0,
  REWARD_ANSWER: 1
};

/**
 * @enum {number}
 */
proto.api_proto.SpaceCategory = {
  LINE: 0,
  SPACE: 1
};

